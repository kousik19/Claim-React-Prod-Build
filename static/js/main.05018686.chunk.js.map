{"version":3,"sources":["components/header/KMRHeader.jsx","components/menu/KMRMenu.jsx","components/AgGridStatusBadgeRenderer.jsx","service/APIService.js","components/KMRInitialTabConent.jsx","components/KMRPendingInfoTabContent.jsx","components/KMRPendingApprovalTabContent.jsx","components/KMRProcessingTabContent.jsx","components/KMRErrorTabContent.jsx","components/KMRAcceptedTabContent.jsx","components/KMRRejectedTabContent.jsx","components/KMRArchieveTabContent.jsx","components/KMRClaims.jsx","service/UtilityService.js","components/create-claim/CreateClaim.jsx","components/master-data-list/MasterDataList.jsx","components/master-data-item/AgGridActionColumnRenderer.jsx","components/master-data-item/MasterDataItem.jsx","components/master-data-entry/MasterDataEntry.jsx","components/master-data-edit/AgGridActionColumnRenderer.jsx","components/master-data-edit/MasterDataEdit.jsx","components/KMRContentArea.jsx","components/login/Login.jsx","components/parent/KMRParentComponent.js","App.js","serviceWorker.js","index.js"],"names":["KMRHeader","Navbar","className","expand","Brand","href","Toggle","aria-controls","Collapse","id","NavDropdown","title","Fragment","Item","eventKey","Divider","Nav","Link","React","Component","KMRMenu","props","state","goToMasterDataEntry","navigateTo","bind","e","window","location","this","to","activeKey","onClick","AgGridStatusBadgeRenderer","reasons","context","componentParent","methodFromParent","node","rowIndex","colDef","headerName","value","Badge","variant","data-tip","Math","floor","random","data-place","APIService","host","port","urlMap","purpose","params","ep","undefined","urlParts","split","paramPointer","i","length","indexOf","constructedUrl","join","console","err","url","obj","callback","fetch","then","res","json","response","status","alert","payload","method","body","headers","KMRInitialTabContent","apiService","ApiService","onGridSizeChanged","gridWidth","document","getElementById","offsetWidth","columnsToShow","columnsToHide","totalColsWidth","allColumns","columnApi","getAllColumns","column","getMinWidth","push","colId","setColumnsVisible","api","sizeColumnsToFit","columnDefs","field","cellRenderer","rowData","frameworkComponents","gridStatusBadgeRenderer","fetchClaims","getApiUrl","root","invokeGet","data","temp","name","memberName","ssn","memberSSN","date","setState","cellVal","style","width","height","onCellClicked","KMRPendingInfoTabContent","KMRPendingApprovalTabContent","KMRProcessingTabContent","KMRErrorTabContent","KMRAcceptedTabContent","KMRRejectedTabContent","KMRArchieveTabContent","KMRClaims","formModalRef","createRef","toCreate","goToCreateClaim","Row","Col","Button","Accordion","Card","as","Header","Body","Form","Group","controlId","Label","Control","type","placeholder","Tabs","defaultActiveKey","Tab","Utility","substring","s","c","charCodeAt","String","fromCharCode","CreateClaim","ctrlKeyPressed","altKeyPressed","isLoading","options","inputProps","onChange","types","selectedTabIndex","autoSaveInterval","lineItem","label","masterdata","key","claimId","claimIdHeader","depOptions","depValue","depIsLoading","masterClaimType","masterReceivedDate","memberAddress","memberPolicy","memberCity","memberState","memberZip","memberTelephone","memberDob","memberSex","memberEmployer","memberInsurancePlan","patientRelation","patientSSN","patientName","patientDob","patientSex","patientAddress","patientCity","patientState","patientZip","patientTelePhone","patientMStat","patientEStat","patientCondition","diagnosisCodes","pointer","diagnosisLineItems","JSON","parse","stringify","totalCharges","totalAllowed","totalDeductible","totalNotCovered","totalPayment","othersFedId","othersPatientAccountNum","othersPendCode","othersBillingNo","othersPayee","othersProvider","othersProviderAddress","showClaimPopup","historyClaims","handleSelect","handlePatientChange","handleDiagnosticCodeChange","handleLineItemChange","commonChangeHandler","autoSave","tabNavKeyCheck","match","claimid","fetchClaim","moment","format","populateMasterDropdown","invokeAPIToPopulateOptions","index","masterData","constructDropdownArray","serverData","masterItem","list","display","hasOwnProperty","val","finArr","itemObj","tempObj","tempArr","itemKey","onkeydown","event","keyIdentifier","keyCode","ctrlKey","lineItems","mouseClick","selectedMember","fname","lname","address1","address2","city","zip1","phone","UtilityService","formatDate","dob","sex","fetchDependentList","focus","selectedValue","target","dssn","autoPopulatePatient","selectedDependent","relation","patientPolicy","patientTelephone","patientEmployer","patientInsurancePlan","diagnosis","dataset","trim","splice","nextLetter","depedentFetchUrl","log","lineItemsArr","j","isNaN","parseFloat","getElementsByClassName","classList","add","clearInterval","setTimeout","autoSaveData","startsWith","modifiedArr","innerArr","autoSaveUrl","invokePost","remove","reload","claimHistoryUrl","open","clearForm","goToDashBoard","onSelect","Container","fluid","md","sm","data-name","map","maxResults","autoFocus","labelKey","option","onSearch","query","resp","selected","autoPopulateMember","renderMenuItemChildren","initial","readOnly","d","data-index","fontSize","addNewLineItem","Table","striped","bordered","hover","size","tVal","tIndex","class","readonly","Modal","show","onHide","handleClaimPopupClose","closeButton","Title","claim","data-claimId","openHistoryClaim","MasterDataList","labelNameMap","filter","floatingFilter","flex","modules","SetFilterModule","fetchMasterItemList","rows","masteritem","identifier","AgGridActionColumnRenderer","onDeleteClick","delete","MasterDataItem","itemSpecificProperties","item","gridAPI","columnAPI","alertMessage","rowSelection","gridActionColumnRenderer","defaultColDef","sortable","editable","resizable","AllModules","sideBar","toolPanels","labelDefault","iconKey","toolPanel","toolPanelParams","suppressRowGroups","suppressValues","suppressPivots","suppressPivotMode","suppressSideButtons","suppressColumnFilter","suppressColumnSelectAll","suppressColumnExpandAll","defaultToolPanel","fetchMasterDataItem","cols","x","toString","parts","isFirstVisibleCol","visibleColumnCount","hiddenCols","hide","suppressToolPanel","checkboxSelection","headerCheckboxSelection","action","rowdata","invokeDelete","tableData","setRowData","exportCols","exportDataAsCsv","columnKeys","onlySelected","fileName","goToGlobalMasterItemList","goToCreateMasterItem","Alert","showNotification","onFirstDataRendered","onGridReady","onRowDataChanged","onRowDataChange","exportCsv","MasterDataEntry","apiEndPointMap","mid","parentFields","childFields","childRows","formData","varient","fetchMasterDataItemFormFields","hidden","required","toLowerCase","resetForm","error","message","crows","child","parent","replace","fdata","masterItemLabel","encodeURI","goToListItems","data-type","maxLength","datalength","createMasterItem","MasterDataEdit","childField","childCols","childClass","childLabel","agGridParams","gridApi","createChildLink","cid","invokePut","constructLabelFromItem","constructedChildLabel","getDataById","toUpperCase","isCaps","ch","getChildTableFields","tableFields","colDefs","rowDefs","row","isDeleted","rowObj","isDeteled","history","back","editMasterItem","export","KMRContentArea","exact","path","component","Login","username","password","sessionStorage","setItem","changeUsername","changePassword","login","KMRParentComponent","loggedIn","checkLogin","getItem","App","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.05018686.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\nimport { MdPerson } from 'react-icons/md';\r\nimport { MdNotifications } from 'react-icons/md';\r\nimport { MdExitToApp } from 'react-icons/md';\r\n\r\nimport \"./KMRHeader.css\";\r\n\r\n\r\nclass KMRHeader extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Navbar className=\"customblue\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#home\">KMR Systems</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\r\n                    <div className=\"header-right-section\">\r\n                        <Navbar className=\"right-nav\">\r\n\r\n                            <NavDropdown title={\r\n                                <React.Fragment>\r\n                                    <MdNotifications />\r\n                                </React.Fragment>\r\n                            } id=\"nav-dropdown\" className=\"nav-dropdown\">\r\n                                <NavDropdown.Item eventKey=\"4.1\"> Claim# 51322 is assigned <br /> to you for approval </NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item eventKey=\"4.1\"> More than expected number <br /> of claims getting in queue </NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item eventKey=\"4.2\"> Claim# 31253 is <br /> required address details. </NavDropdown.Item>\r\n                            </NavDropdown>\r\n\r\n                            <NavDropdown title={\r\n                                <React.Fragment>\r\n                                    <MdPerson />\r\n                                </React.Fragment>\r\n                            } id=\"nav-dropdown\" className=\"nav-dropdown\">\r\n                                <NavDropdown.Item eventKey=\"4.1\"> My Profile  </NavDropdown.Item>\r\n                                <NavDropdown.Item eventKey=\"4.2\"> Settings </NavDropdown.Item>\r\n                                <NavDropdown.Item eventKey=\"4.3\"> Choose Theme </NavDropdown.Item>\r\n                            </NavDropdown>\r\n\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"link-2\">\r\n                                    <MdExitToApp />\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                        </Navbar>\r\n                    </div>\r\n\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default KMRHeader;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'; \r\n\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\nimport \"./KMRMenu.css\";\r\n\r\n\r\nclass KMRMenu extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            goToMasterDataEntry: false\r\n        }\r\n\r\n        this.navigateTo = this.navigateTo.bind(this);\r\n    }\r\n\r\n    navigateTo(e) {\r\n        //var obj = {};\r\n        //obj[statePath] = true;\r\n        //this.setState(() => ({ goToMasterDataEntry: true }))\r\n        window.location.href = \"/portal/masterdata\"\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.state.goToMasterDataEntry) {\r\n            return <Redirect to='/portal/masterdata' />\r\n        }\r\n\r\n        return (\r\n            <div className=\"topFixed mateffect\">\r\n                <div className=\"menuRow\">\r\n                    <Nav className=\"justify-content-center\" activeKey=\"/home\">\r\n\r\n                        <NavDropdown title=\"Claims\" id=\"nav-dropdown\" className=\"nav-dropdown\">\r\n                            <NavDropdown.Item eventKey=\"4.1\"> Create New </NavDropdown.Item>\r\n                            <NavDropdown.Item eventKey=\"4.2\"> Claim List </NavDropdown.Item>\r\n                            <NavDropdown.Item eventKey=\"4.3\"> Pending Approval </NavDropdown.Item>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item eventKey=\"4.4\"> Archieve </NavDropdown.Item>\r\n                        </NavDropdown>\r\n\r\n                        <NavDropdown title=\"User Maintainance\" id=\"nav-dropdown\" className=\"nav-dropdown\">\r\n                            <NavDropdown.Item eventKey=\"4.5\"> Create User </NavDropdown.Item>\r\n                            <NavDropdown.Item eventKey=\"4.6\"> User List </NavDropdown.Item>\r\n                            <NavDropdown.Item eventKey=\"4.7\"> Roles & Permissions </NavDropdown.Item>\r\n                        </NavDropdown>\r\n\r\n                        <NavDropdown title=\"Settings\" id=\"nav-dropdown\" className=\"nav-dropdown\">\r\n                            <NavDropdown.Item eventKey=\"4.8\" onClick={this.navigateTo}> Master Data </NavDropdown.Item>\r\n                        </NavDropdown>\r\n\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"link-2\">Help</Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default KMRMenu;","import React, { Component } from 'react';\r\n\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { MdCheck } from 'react-icons/md';\r\nimport { MdClose } from 'react-icons/md';\r\n\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nexport default class AgGridStatusBadgeRenderer extends Component {\r\n\r\n  reasons = [\r\n    \"Specific disease is not covered under the scheme\",\r\n    \"Plan is expired\",\r\n    \"Hospital in not under approved list coverage\",\r\n    \"Claim amount exceeds the limit\",\r\n    \"Family member is not covered under the scheme\"\r\n  ];\r\n  invokeParentMethod() {\r\n    this.props.context.componentParent.methodFromParent(\r\n      `Row: ${this.props.node.rowIndex}, Col: ${this.props.colDef.headerName}`\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if(this.props.value === \"Initial\")return <Badge variant='primary'> Initial </Badge>;\r\n    else if(this.props.value === \"Pending Info\")return <Badge variant='warning'> Pending Information </Badge>;\r\n    else if(this.props.value === \"Pending Approval\")return <Badge variant='info'> Pending Approval </Badge>;\r\n    else if(this.props.value === \"Processing\")return <Badge variant='success'> Processing </Badge>;\r\n    else if(this.props.value === \"Error\")return <Badge variant='danger'> Error </Badge>;\r\n    else if(this.props.value === \"Accepted\")return <Badge variant='success'> <MdCheck /> </Badge>;\r\n    else if(this.props.value === \"Rejected\")return (\r\n      <>\r\n        <Badge variant='danger' data-tip={this.reasons[Math.floor(Math.random() * 5)]} data-place='right'> <MdClose /> </Badge>\r\n        <ReactTooltip />\r\n      </>\r\n    );\r\n  }\r\n}","import { axios } from 'axios'\r\n\r\nclass APIService {\r\n\r\n    //host = \"http://localhost\";\r\n    host = \"http://69.2.39.181\";\r\n    port = \"8082\";\r\n\r\n    urlMap = {\r\n        \"memberSuggestUrl\" : \"cdlsr/suggestmember/{param1}\",\r\n        \"fetchDepedentByMember\" : \"cdlsr/dependentlist/member/{param1}\",\r\n        \"claimAutoSave\" : \"cdlsr/autosave\",\r\n        \"getClaimById\" : \"cdlsr/claim/{param1}\",\r\n        \"getClaimByMember\" : \"cdlsr/claim/member/{param1}\",\r\n        \"getClaimsByStatus\" : \"cdlsr/claims/status/{param1}\",\r\n        \"getMasterItemDropdownList\" : \"cdlsr/getMasterItemDropdownList/{param1}\",\r\n\r\n        /* Master item data entry */\r\n        \"getMasterItems\" : \"mdlsr/masteritems\",\r\n        \"getmasterItemFormFields\" : \"mdlsr/masteritemfields/{param1}\",\r\n        \"getTableFields\" : \"mdlsr/masteritemtablefields/{param1}\",\r\n        \"getmasterSpecificMasterItemList\" : \"mdlsr/masteritemlist/{param1}\",\r\n        \"createMasterItem\" : \"mdlsr/{param1}\",\r\n        \"createMasterChildItem\" : \"mdlsr/{param1}/masterid/{param2}\",\r\n        \"editMasterItem\" : \"mdlsr/{param1}\",\r\n        \"editMasterChildItem\" : \"mdlsr/{param1}/masterid/{param2}\",\r\n        \"getMasterItemById\" : \"mdlsr/get/{param1}/{param2}\",\r\n        \"getMasterChildItemById\" : \"mdlsr/getchilditem/{param1}/masterid/{param2}/childid/{param3}\",\r\n        \"deleteMasterItemById\" : \"mdlsr/delete/{param1}/{param2}\",\r\n        \"deleteChildItemById\" : \"mdlsr/deletechilditem/{param1}/{param2}/{param3}/{param4}\"\r\n    }\r\n\r\n    getApiUrl(purpose, params = []) {\r\n\r\n        try{\r\n            var ep = this.urlMap[purpose];\r\n            if(ep == undefined) return null;\r\n\r\n            var urlParts = ep.split(\"/\");\r\n            var paramPointer = 0;\r\n            \r\n            for(var i=0; i< urlParts.length; i++) {\r\n                if(urlParts[i].indexOf(\"{param\") > -1) {\r\n                    urlParts[i] = params[paramPointer++];\r\n                }\r\n            }\r\n            //console.log(params);\r\n            //console.log(urlParts);\r\n            var constructedUrl = this.host + \":\" + this.port + \"/\" + urlParts.join(\"/\");\r\n            //var constructedUrl = \"/\" + urlParts.join(\"/\");\r\n            return constructedUrl;\r\n\r\n        } catch(e) {\r\n            console.err(e);\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    invokeGet(url, obj, callback) {\r\n\r\n        fetch(url).then(res => res.json()).then((response) => {\r\n            if(response.status == \"success\")\r\n                callback(response, obj);\r\n            else alert(\"Error!!\");\r\n        })\r\n    }\r\n\r\n    invokePost(url, payload, obj, callback) {\r\n\r\n        /*axios.post(url, payload)\r\n        .then(response => {\r\n            callback(response, obj);\r\n        })*/\r\n        fetch(\r\n            url, \r\n            {\r\n                method: \"POST\",\r\n                body: payload,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(res => res.json()).then((response) => {\r\n            callback(response, obj);\r\n        })\r\n    }\r\n\r\n    invokePut(url, payload, obj, callback) {\r\n\r\n        fetch(\r\n            url, \r\n            {\r\n                method: \"PUT\",\r\n                body: payload,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(res => res.json()).then((response) => {\r\n            callback(response, obj);\r\n        })\r\n    }\r\n\r\n    invokeDelete(url, payload, obj, callback) {\r\n\r\n        fetch(\r\n            url, \r\n            {\r\n                method: \"DELETE\",\r\n                body: payload,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(res => res.json()).then((response) => {\r\n            callback(response, obj);\r\n        })\r\n    }\r\n}\r\n\r\nexport default APIService;","import React from 'react';\r\n\r\nimport {AgGridReact} from 'ag-grid-react';\r\nimport AgGridStatusBadgeRenderer from './AgGridStatusBadgeRenderer.jsx';\r\n\r\nimport ApiService from './../service/APIService';\r\n\r\nimport \"../styles/KMRInitialTabContent.css\";\r\n\r\n\r\nclass KMRInitialTabContent extends React.Component {\r\n\r\n    apiService = new ApiService();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.status = \"initial\";\r\n\r\n        this.state = {\r\n          columnDefs: [\r\n                { headerName: \"Claim Id\", field: \"id\" },\r\n                { headerName: \"Member Name\", field: \"name\" },\r\n                { headerName: \"Member SSN\", field: \"ssn\" },\r\n                { headerName: \"Last Update\", field: \"date\" },\r\n                { headerName: \"Status\", field: \"status\", cellRenderer: 'gridStatusBadgeRenderer' }\r\n            ],\r\n            rowData: [\r\n                \r\n            ],\r\n            frameworkComponents: {\r\n                gridStatusBadgeRenderer: AgGridStatusBadgeRenderer,\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchClaims();\r\n    }\r\n\r\n    fetchClaims() {\r\n        var url = this.apiService.getApiUrl(\"getClaimsByStatus\", [\"initial\"]);\r\n        var root = this;\r\n        this.apiService.invokeGet(url, this, function(response){\r\n            var data = response.data;\r\n            var temp = [];\r\n            for(var i=0; i< data.length; i++) {\r\n                var obj = {};\r\n                obj.id = data[i].id;\r\n                obj.name = data[i].memberName;\r\n                obj.ssn = data[i].memberSSN;\r\n                obj.date = \"09/28/2020\";\r\n                obj.status = \"Initial\";\r\n\r\n                temp.push(obj);\r\n            }\r\n\r\n            root.setState({'rowData': temp});\r\n        })\r\n    }\r\n\r\n    onCellClicked(obj) {\r\n        var cellVal = obj.data.id;\r\n        window.location.href = \"/portal/create/\" + cellVal;\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"grid-wrapper\" style={{ width: '100%', height: '100%' }}>\r\n                <div className=\"ag-theme-alpine ag-grid-container\" style={ {height: '300px', width: '100%'} }>\r\n                    <AgGridReact\r\n                        columnDefs={this.state.columnDefs}\r\n                        rowData={this.state.rowData}\r\n                        frameworkComponents={this.state.frameworkComponents}\r\n                        onGridSizeChanged={this.onGridSizeChanged.bind(this)}\r\n                        onCellClicked={this.onCellClicked.bind(this)}\r\n                    >\r\n                    </AgGridReact>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n    onGridSizeChanged = params => {\r\n        var gridWidth = document.getElementById('grid-wrapper').offsetWidth;\r\n        var columnsToShow = [];\r\n        var columnsToHide = [];\r\n        var totalColsWidth = 0;\r\n        var allColumns = params.columnApi.getAllColumns();\r\n        for (var i = 0; i < allColumns.length; i++) {\r\n          var column = allColumns[i];\r\n          totalColsWidth += column.getMinWidth();\r\n          if (totalColsWidth > gridWidth) {\r\n            columnsToHide.push(column.colId);\r\n          } else {\r\n            columnsToShow.push(column.colId);\r\n          }\r\n        }\r\n        params.columnApi.setColumnsVisible(columnsToShow, true);\r\n        params.columnApi.setColumnsVisible(columnsToHide, false);\r\n        params.api.sizeColumnsToFit();\r\n    };\r\n}\r\n\r\nexport default KMRInitialTabContent;","import React from 'react';\r\n\r\nimport {AgGridReact} from 'ag-grid-react';\r\nimport AgGridStatusBadgeRenderer from './AgGridStatusBadgeRenderer';\r\n\r\nclass KMRPendingInfoTabContent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          columnDefs: [\r\n                { headerName: \"Claim Id\", field: \"id\" },\r\n                { headerName: \"Member Name\", field: \"name\" },\r\n                { headerName: \"Member SSN\", field: \"ssn\" },\r\n                { headerName: \"Last Update\", field: \"date\" },\r\n                { headerName: \"Status\", field: \"status\", cellRenderer: 'gridStatusBadgeRenderer' }\r\n            ],\r\n            rowData: [\r\n                { id: \"1234\", name: \"Kevin Peterson\", ssn: 42342421, date: \"01/12/2019\", status: \"Pending Info\" },\r\n                { id: \"3452\", name: \"Jack Ryan\", ssn: 65344634, date: \"05/03/2020\", status: \"Pending Info\" },\r\n                { id: \"1221\", name: \"Rob Stark\", ssn: 546343123, date: \"06/07/2019\", status: \"Pending Info\" },\r\n                { id: \"3221\", name: \"Ned Stark\", ssn: 86786545, date: \"12/12/2020\", status: \"Pending Info\" },\r\n                { id: \"5676\", name: \"Denis Lilly\", ssn: 78643456, date: \"12/09/2019\", status: \"Pending Info\" },\r\n                { id: \"8675\", name: \"Michael Vaughn\", ssn: 86754346, date: \"03/12/2019\", status: \"Pending Info\" },\r\n                { id: \"9785\", name: \"John Snow\", ssn: 32424523, date: \"30/12/2019\", status: \"Pending Info\" },\r\n                { id: \"5345\", name: \"Tom Clancy\", ssn: 3453456, date: \"31/08/2019\", status: \"Pending Info\" },\r\n                { id: \"5945\", name: \"Michel Stark\", ssn: 86786789, date: \"12/08/2019\", status: \"Pending Info\" },\r\n                { id: \"5676\", name: \"Steve Smith\", ssn: 5675445, date: \"12/09/2019\", status: \"Pending Info\" },\r\n                { id: \"9786\", name: \"John McNally\", ssn: 67896789, date: \"12/10/2019\", status: \"Pending Info\" },\r\n                { id: \"5988\", name: \"Karl Hooper\", ssn: 234345, date: \"12/12/2019\", status: \"Pending Info\" },\r\n                { id: \"5343\", name: \"Tyrion Lanister\", ssn: 89076789, date: \"12/12/2019\", status: \"Pending Info\" },\r\n                { id: \"9767\", name: \"Brian Smith\", ssn: 58567857, date: \"12/12/2019\", status: \"Pending Info\" },\r\n                { id: \"2218\", name: \"Cerci Lanister\", ssn: 423467, date: \"12/12/2019\", status: \"Pending Info\" }\r\n            ],\r\n            frameworkComponents: {\r\n                gridStatusBadgeRenderer: AgGridStatusBadgeRenderer,\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"grid-wrapper-pending-info\" style={{ width: '100%', height: '100%' }}>\r\n                <div className=\"ag-theme-alpine ag-grid-container\" style={ {height: '300px', width: '100%'} }>\r\n                    <AgGridReact\r\n                        columnDefs={this.state.columnDefs}\r\n                        rowData={this.state.rowData}\r\n                        frameworkComponents={this.state.frameworkComponents}\r\n                        onGridSizeChanged={this.onGridSizeChanged.bind(this)}\r\n                        \r\n                    >\r\n                    </AgGridReact>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n    onGridSizeChanged = params => {\r\n        var gridWidth = document.getElementById('grid-wrapper-pending-info').offsetWidth;\r\n        var columnsToShow = [];\r\n        var columnsToHide = [];\r\n        var totalColsWidth = 0;\r\n        var allColumns = params.columnApi.getAllColumns();\r\n        for (var i = 0; i < allColumns.length; i++) {\r\n          var column = allColumns[i];\r\n          totalColsWidth += column.getMinWidth();\r\n          if (totalColsWidth > gridWidth) {\r\n            columnsToHide.push(column.colId);\r\n          } else {\r\n            columnsToShow.push(column.colId);\r\n          }\r\n        }\r\n        params.columnApi.setColumnsVisible(columnsToShow, true);\r\n        params.columnApi.setColumnsVisible(columnsToHide, false);\r\n        params.api.sizeColumnsToFit();\r\n    };\r\n}\r\n\r\nexport default KMRPendingInfoTabContent;","import React from 'react';\r\n\r\nimport {AgGridReact} from 'ag-grid-react';\r\nimport AgGridStatusBadgeRenderer from './AgGridStatusBadgeRenderer.jsx';\r\n\r\nimport \"../styles/KMRInitialTabContent.css\";\r\n\r\n\r\nclass KMRPendingApprovalTabContent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          columnDefs: [\r\n                { headerName: \"Claim Id\", field: \"id\" },\r\n                { headerName: \"Member Name\", field: \"name\" },\r\n                { headerName: \"Member SSN\", field: \"ssn\" },\r\n                { headerName: \"Last Update\", field: \"date\" },\r\n                { headerName: \"Status\", field: \"status\", cellRenderer: 'gridStatusBadgeRenderer' }\r\n            ],\r\n            rowData: [\r\n                { id: \"1001\", name: \"John Snow\", ssn: 123456789, date: \"12/12/2019\", status: \"Pending Approval\" },\r\n                { id: \"1002\", name: \"Cerci Lanister\", ssn: 987654321, date: \"12/12/2019\", status: \"Pending Approval\" },\r\n                { id: \"1003\", name: \"Rob Stark\", ssn: 876543210, date: \"12/12/2019\", status: \"Pending Approval\" },\r\n                { id: \"1004\", name: \"Ned Stark\", ssn: 7867642, date: \"12/12/2019\", status: \"Pending Approval\" },\r\n                { id: \"1005\", name: \"Tyrion Lanister\", ssn: 312435, date: \"12/12/2019\", status: \"Pending Approval\" },\r\n                { id: \"1006\", name: \"Tom Clancy\", ssn: 5463512, date: \"12/12/2019\", status: \"Pending Approval\" },\r\n                { id: \"1007\", name: \"Kevin Peterson\", ssn: 67546134, date: \"12/12/2019\", status: \"Pending Approval\" },\r\n                { id: \"1008\", name: \"Michael Vaughn\", ssn: 3456341, date: \"12/12/2019\", status: \"Pending Approval\" },\r\n                { id: \"1009\", name: \"Michel Stark\", ssn: 6457458, date: \"12/12/2019\", status: \"Pending Approval\" },\r\n                { id: \"10010\", name: \"Steve Smith\", ssn: 13243, date: \"12/12/2019\", status: \"Pending Approval\" },\r\n                { id: \"1011\", name: \"John McNally\", ssn: 8562534, date: \"12/12/2019\", status: \"Pending Approval\" },\r\n                { id: \"1012\", name: \"Karl Hooper\", ssn: 4523534, date: \"12/12/2019\", status: \"Pending Approval\" },\r\n                { id: \"1013\", name: \"Denis Lilly\", ssn: 345342354, date: \"12/12/2019\", status: \"Pending Approval\" },\r\n                { id: \"1014\", name: \"Brian Smith\", ssn: 234523, date: \"12/12/2019\", status: \"Pending Approval\" },\r\n                { id: \"1015\", name: \"Jack Ryan\", ssn: 534254, date: \"12/12/2019\", status: \"Pending Approval\" }\r\n            ],\r\n            frameworkComponents: {\r\n                gridStatusBadgeRenderer: AgGridStatusBadgeRenderer,\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"grid-wrapper-pending-approval\" style={{ width: '100%', height: '100%' }}>\r\n                <div className=\"ag-theme-alpine ag-grid-container\" style={ {height: '300px', width: '100%'} }>\r\n                    <AgGridReact\r\n                        columnDefs={this.state.columnDefs}\r\n                        rowData={this.state.rowData}\r\n                        frameworkComponents={this.state.frameworkComponents}\r\n                        onGridSizeChanged={this.onGridSizeChanged.bind(this)}\r\n                    >\r\n                    </AgGridReact>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n    onGridSizeChanged = params => {\r\n        var gridWidth = document.getElementById('grid-wrapper-pending-approval').offsetWidth;\r\n        var columnsToShow = [];\r\n        var columnsToHide = [];\r\n        var totalColsWidth = 0;\r\n        var allColumns = params.columnApi.getAllColumns();\r\n        for (var i = 0; i < allColumns.length; i++) {\r\n          var column = allColumns[i];\r\n          totalColsWidth += column.getMinWidth();\r\n          if (totalColsWidth > gridWidth) {\r\n            columnsToHide.push(column.colId);\r\n          } else {\r\n            columnsToShow.push(column.colId);\r\n          }\r\n        }\r\n        params.columnApi.setColumnsVisible(columnsToShow, true);\r\n        params.columnApi.setColumnsVisible(columnsToHide, false);\r\n        params.api.sizeColumnsToFit();\r\n    };\r\n}\r\n\r\nexport default KMRPendingApprovalTabContent;","import React from 'react';\r\n\r\nimport {AgGridReact} from 'ag-grid-react';\r\nimport AgGridStatusBadgeRenderer from './AgGridStatusBadgeRenderer.jsx';\r\n\r\n\r\nclass KMRProcessingTabContent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          columnDefs: [\r\n                { headerName: \"Claim Id\", field: \"id\" },\r\n                { headerName: \"Member Name\", field: \"name\" },\r\n                { headerName: \"Member SSN\", field: \"ssn\" },\r\n                { headerName: \"Last Update\", field: \"date\" },\r\n                { headerName: \"Status\", field: \"status\", cellRenderer: 'gridStatusBadgeRenderer' }\r\n            ],\r\n            rowData: [\r\n                { id: \"1001\", name: \"John Snow\", ssn: 123456789, date: \"12/12/2019\", status: \"Processing\" },\r\n                { id: \"1002\", name: \"Cerci Lanister\", ssn: 987654321, date: \"12/12/2019\", status: \"Processing\" },\r\n                { id: \"1003\", name: \"Rob Stark\", ssn: 876543210, date: \"12/12/2019\", status: \"Processing\" },\r\n                { id: \"1004\", name: \"Ned Stark\", ssn: 7867642, date: \"12/12/2019\", status: \"Processing\" },\r\n                { id: \"1005\", name: \"Tyrion Lanister\", ssn: 312435, date: \"12/12/2019\", status: \"Processing\" },\r\n                { id: \"1006\", name: \"Tom Clancy\", ssn: 5463512, date: \"12/12/2019\", status: \"Processing\" }\r\n            ],\r\n            frameworkComponents: {\r\n                gridStatusBadgeRenderer: AgGridStatusBadgeRenderer,\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"grid-wrapper-processing\" style={{ width: '100%', height: '100%' }}>\r\n                <div className=\"ag-theme-alpine ag-grid-container\" style={ {height: '300px', width: '100%'} }>\r\n                    <AgGridReact\r\n                        columnDefs={this.state.columnDefs}\r\n                        rowData={this.state.rowData}\r\n                        frameworkComponents={this.state.frameworkComponents}\r\n                        onGridSizeChanged={this.onGridSizeChanged.bind(this)}\r\n                    >\r\n                    </AgGridReact>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n    onGridSizeChanged = params => {\r\n        var gridWidth = document.getElementById('grid-wrapper-processing').offsetWidth;\r\n        var columnsToShow = [];\r\n        var columnsToHide = [];\r\n        var totalColsWidth = 0;\r\n        var allColumns = params.columnApi.getAllColumns();\r\n        for (var i = 0; i < allColumns.length; i++) {\r\n          var column = allColumns[i];\r\n          totalColsWidth += column.getMinWidth();\r\n          if (totalColsWidth > gridWidth) {\r\n            columnsToHide.push(column.colId);\r\n          } else {\r\n            columnsToShow.push(column.colId);\r\n          }\r\n        }\r\n        params.columnApi.setColumnsVisible(columnsToShow, true);\r\n        params.columnApi.setColumnsVisible(columnsToHide, false);\r\n        params.api.sizeColumnsToFit();\r\n    };\r\n}\r\n\r\nexport default KMRProcessingTabContent;","import React from 'react';\r\n\r\nimport {AgGridReact} from 'ag-grid-react';\r\nimport AgGridStatusBadgeRenderer from './AgGridStatusBadgeRenderer.jsx';\r\n\r\nclass KMRErrorTabContent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          columnDefs: [\r\n                { headerName: \"Claim Id\", field: \"id\" },\r\n                { headerName: \"Member Name\", field: \"name\" },\r\n                { headerName: \"Member SSN\", field: \"ssn\" },\r\n                { headerName: \"Last Update\", field: \"date\" },\r\n                { headerName: \"Status\", field: \"status\", cellRenderer: 'gridStatusBadgeRenderer' }\r\n            ],\r\n            rowData: [\r\n                { id: \"1001\", name: \"Lui Philips\", ssn: 43213423, date: \"06/12/2020\", status: \"Error\" },\r\n                { id: \"1002\", name: \"Mark Williams\", ssn: 756356564, date: \"08/19/2020\", status: \"Error\" }\r\n            ],\r\n            frameworkComponents: {\r\n                gridStatusBadgeRenderer: AgGridStatusBadgeRenderer,\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"grid-wrapper-error\" style={{ width: '100%', height: '100%' }}>\r\n                <div className=\"ag-theme-alpine ag-grid-container\" style={ {height: '300px', width: '100%'} }>\r\n                    <AgGridReact\r\n                        columnDefs={this.state.columnDefs}\r\n                        rowData={this.state.rowData}\r\n                        frameworkComponents={this.state.frameworkComponents}\r\n                        onGridSizeChanged={this.onGridSizeChanged.bind(this)}\r\n                    >\r\n                    </AgGridReact>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n    onGridSizeChanged = params => {\r\n        var gridWidth = document.getElementById('grid-wrapper-error').offsetWidth;\r\n        var columnsToShow = [];\r\n        var columnsToHide = [];\r\n        var totalColsWidth = 0;\r\n        var allColumns = params.columnApi.getAllColumns();\r\n        for (var i = 0; i < allColumns.length; i++) {\r\n          var column = allColumns[i];\r\n          totalColsWidth += column.getMinWidth();\r\n          if (totalColsWidth > gridWidth) {\r\n            columnsToHide.push(column.colId);\r\n          } else {\r\n            columnsToShow.push(column.colId);\r\n          }\r\n        }\r\n        params.columnApi.setColumnsVisible(columnsToShow, true);\r\n        params.columnApi.setColumnsVisible(columnsToHide, false);\r\n        params.api.sizeColumnsToFit();\r\n    };\r\n}\r\n\r\nexport default KMRErrorTabContent;","import React from 'react';\r\n\r\nimport {AgGridReact} from 'ag-grid-react';\r\nimport AgGridStatusBadgeRenderer from './AgGridStatusBadgeRenderer.jsx';\r\n\r\n\r\nclass KMRAcceptedTabContent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          columnDefs: [\r\n                { headerName: \"Claim Id\", field: \"id\" },\r\n                { headerName: \"Member Name\", field: \"name\" },\r\n                { headerName: \"Member SSN\", field: \"ssn\" },\r\n                { headerName: \"Last Update\", field: \"date\" },\r\n                { headerName: \"Status\", field: \"status\", cellRenderer: 'gridStatusBadgeRenderer' }\r\n            ],\r\n            rowData: [\r\n                { id: \"1001\", name: \"John Snow\", ssn: 123456789, date: \"12/12/2019\", status: \"Accepted\" },\r\n                { id: \"1002\", name: \"Cerci Lanister\", ssn: 987654321, date: \"12/12/2019\", status: \"Accepted\" },\r\n                { id: \"1003\", name: \"Rob Stark\", ssn: 876543210, date: \"12/12/2019\", status: \"Accepted\" },\r\n                { id: \"1004\", name: \"Ned Stark\", ssn: 7867642, date: \"12/12/2019\", status: \"Accepted\" },\r\n                { id: \"1005\", name: \"Tyrion Lanister\", ssn: 312435, date: \"12/12/2019\", status: \"Accepted\" },\r\n                { id: \"1006\", name: \"Tom Clancy\", ssn: 5463512, date: \"12/12/2019\", status: \"Accepted\" },\r\n                { id: \"1007\", name: \"Kevin Peterson\", ssn: 67546134, date: \"12/12/2019\", status: \"Accepted\" },\r\n                { id: \"1008\", name: \"Michael Vaughn\", ssn: 3456341, date: \"12/12/2019\", status: \"Accepted\" },\r\n                { id: \"1009\", name: \"Michel Stark\", ssn: 6457458, date: \"12/12/2019\", status: \"Accepted\" },\r\n                { id: \"10010\", name: \"Steve Smith\", ssn: 13243, date: \"12/12/2019\", status: \"Accepted\" },\r\n                { id: \"1011\", name: \"John McNally\", ssn: 8562534, date: \"12/12/2019\", status: \"Accepted\" },\r\n                { id: \"1012\", name: \"Karl Hooper\", ssn: 4523534, date: \"12/12/2019\", status: \"Accepted\" },\r\n                { id: \"1013\", name: \"Denis Lilly\", ssn: 345342354, date: \"12/12/2019\", status: \"Accepted\" },\r\n                { id: \"1014\", name: \"Brian Smith\", ssn: 234523, date: \"12/12/2019\", status: \"Accepted\" },\r\n                { id: \"1015\", name: \"Jack Ryan\", ssn: 534254, date: \"12/12/2019\", status: \"Accepted\" }\r\n            ],\r\n            frameworkComponents: {\r\n                gridStatusBadgeRenderer: AgGridStatusBadgeRenderer,\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"grid-wrapper-accepted\" style={{ width: '100%', height: '100%' }}>\r\n                <div className=\"ag-theme-alpine ag-grid-container\" style={ {height: '300px', width: '100%'} }>\r\n                    <AgGridReact\r\n                        columnDefs={this.state.columnDefs}\r\n                        rowData={this.state.rowData}\r\n                        frameworkComponents={this.state.frameworkComponents}\r\n                        onGridSizeChanged={this.onGridSizeChanged.bind(this)}\r\n                    >\r\n                    </AgGridReact>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n    onGridSizeChanged = params => {\r\n        var gridWidth = document.getElementById('grid-wrapper-accepted').offsetWidth;\r\n        var columnsToShow = [];\r\n        var columnsToHide = [];\r\n        var totalColsWidth = 0;\r\n        var allColumns = params.columnApi.getAllColumns();\r\n        for (var i = 0; i < allColumns.length; i++) {\r\n          var column = allColumns[i];\r\n          totalColsWidth += column.getMinWidth();\r\n          if (totalColsWidth > gridWidth) {\r\n            columnsToHide.push(column.colId);\r\n          } else {\r\n            columnsToShow.push(column.colId);\r\n          }\r\n        }\r\n        params.columnApi.setColumnsVisible(columnsToShow, true);\r\n        params.columnApi.setColumnsVisible(columnsToHide, false);\r\n        params.api.sizeColumnsToFit();\r\n    };\r\n}\r\n\r\nexport default KMRAcceptedTabContent;","import React from 'react';\r\n\r\nimport {AgGridReact} from 'ag-grid-react';\r\nimport AgGridStatusBadgeRenderer from './AgGridStatusBadgeRenderer.jsx';\r\n\r\nclass KMRRejectedTabContent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          columnDefs: [\r\n                { headerName: \"Claim Id\", field: \"id\" },\r\n                { headerName: \"Member Name\", field: \"name\" },\r\n                { headerName: \"Member SSN\", field: \"ssn\" },\r\n                { headerName: \"Last Update\", field: \"date\" },\r\n                { headerName: \"Status\", field: \"status\", cellRenderer: 'gridStatusBadgeRenderer' }\r\n            ],\r\n            rowData: [\r\n                { id: \"1001\", name: \"John Snow\", ssn: 123456789, date: \"12/12/2019\", status: \"Rejected\" },\r\n                { id: \"1002\", name: \"Cerci Lanister\", ssn: 987654321, date: \"12/12/2019\", status: \"Rejected\" },\r\n                { id: \"1003\", name: \"Rob Stark\", ssn: 876543210, date: \"12/12/2019\", status: \"Rejected\" },\r\n                { id: \"1004\", name: \"Ned Stark\", ssn: 7867642, date: \"12/12/2019\", status: \"Rejected\" },\r\n                { id: \"1005\", name: \"Tyrion Lanister\", ssn: 312435, date: \"12/12/2019\", status: \"Rejected\" },\r\n                { id: \"1006\", name: \"Tom Clancy\", ssn: 5463512, date: \"12/12/2019\", status: \"Rejected\" },\r\n                { id: \"1007\", name: \"Kevin Peterson\", ssn: 67546134, date: \"12/12/2019\", status: \"Rejected\" },\r\n                { id: \"1008\", name: \"Michael Vaughn\", ssn: 3456341, date: \"12/12/2019\", status: \"Rejected\" },\r\n                { id: \"1009\", name: \"Michel Stark\", ssn: 6457458, date: \"12/12/2019\", status: \"Rejected\" },\r\n                { id: \"10010\", name: \"Steve Smith\", ssn: 13243, date: \"12/12/2019\", status: \"Rejected\" },\r\n                { id: \"1011\", name: \"John McNally\", ssn: 8562534, date: \"12/12/2019\", status: \"Rejected\" },\r\n                { id: \"1012\", name: \"Karl Hooper\", ssn: 4523534, date: \"12/12/2019\", status: \"Rejected\" },\r\n                { id: \"1013\", name: \"Denis Lilly\", ssn: 345342354, date: \"12/12/2019\", status: \"Rejected\" },\r\n                { id: \"1014\", name: \"Brian Smith\", ssn: 234523, date: \"12/12/2019\", status: \"Rejected\" },\r\n                { id: \"1015\", name: \"Jack Ryan\", ssn: 534254, date: \"12/12/2019\", status: \"Rejected\" }\r\n            ],\r\n            frameworkComponents: {\r\n                gridStatusBadgeRenderer: AgGridStatusBadgeRenderer,\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"grid-wrapper-rejected\" style={{ width: '100%', height: '100%' }}>\r\n                <div className=\"ag-theme-alpine ag-grid-container\" style={ {height: '300px', width: '100%'} }>\r\n                    <AgGridReact\r\n                        columnDefs={this.state.columnDefs}\r\n                        rowData={this.state.rowData}\r\n                        frameworkComponents={this.state.frameworkComponents}\r\n                        onGridSizeChanged={this.onGridSizeChanged.bind(this)}\r\n                    >\r\n                    </AgGridReact>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n    onGridSizeChanged = params => {\r\n        var gridWidth = document.getElementById('grid-wrapper-rejected').offsetWidth;\r\n        var columnsToShow = [];\r\n        var columnsToHide = [];\r\n        var totalColsWidth = 0;\r\n        var allColumns = params.columnApi.getAllColumns();\r\n        for (var i = 0; i < allColumns.length; i++) {\r\n          var column = allColumns[i];\r\n          totalColsWidth += column.getMinWidth();\r\n          if (totalColsWidth > gridWidth) {\r\n            columnsToHide.push(column.colId);\r\n          } else {\r\n            columnsToShow.push(column.colId);\r\n          }\r\n        }\r\n        params.columnApi.setColumnsVisible(columnsToShow, true);\r\n        params.columnApi.setColumnsVisible(columnsToHide, false);\r\n        params.api.sizeColumnsToFit();\r\n    };\r\n}\r\n\r\nexport default KMRRejectedTabContent;","import React from 'react';\r\n\r\nimport {AgGridReact} from 'ag-grid-react';\r\nimport AgGridStatusBadgeRenderer from './AgGridStatusBadgeRenderer.jsx';\r\n\r\nclass KMRArchieveTabContent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          columnDefs: [\r\n                { headerName: \"Claim Id\", field: \"id\" },\r\n                { headerName: \"Member Name\", field: \"name\" },\r\n                { headerName: \"Member SSN\", field: \"ssn\" },\r\n                { headerName: \"Last Update\", field: \"date\" },\r\n                { headerName: \"Status\", field: \"status\", cellRenderer: 'gridStatusBadgeRenderer' }\r\n            ],\r\n            rowData: [\r\n                { id: \"1001\", name: \"John Snow\", ssn: 123456789, date: \"12/12/2019\", status: \"Initial\" },\r\n                { id: \"1002\", name: \"Cerci Lanister\", ssn: 987654321, date: \"12/12/2019\", status: \"Pending Info\" },\r\n                { id: \"1003\", name: \"Rob Stark\", ssn: 876543210, date: \"12/12/2019\", status: \"Initial\" },\r\n                { id: \"1004\", name: \"Ned Stark\", ssn: 7867642, date: \"12/12/2019\", status: \"Initial\" },\r\n                { id: \"1005\", name: \"Tyrion Lanister\", ssn: 312435, date: \"12/12/2019\", status: \"Error\" },\r\n                { id: \"1006\", name: \"Tom Clancy\", ssn: 5463512, date: \"12/12/2019\", status: \"Error\" },\r\n                { id: \"1007\", name: \"Kevin Peterson\", ssn: 67546134, date: \"12/12/2019\", status: \"Processing\" },\r\n                { id: \"1008\", name: \"Michael Vaughn\", ssn: 3456341, date: \"12/12/2019\", status: \"Initial\" },\r\n                { id: \"1009\", name: \"Michel Stark\", ssn: 6457458, date: \"12/12/2019\", status: \"Pending Approval\" },\r\n                { id: \"10010\", name: \"Steve Smith\", ssn: 13243, date: \"12/12/2019\", status: \"Initial\" },\r\n                { id: \"1011\", name: \"John McNally\", ssn: 8562534, date: \"12/12/2019\", status: \"Processing\" },\r\n                { id: \"1012\", name: \"Karl Hooper\", ssn: 4523534, date: \"12/12/2019\", status: \"Initial\" },\r\n                { id: \"1013\", name: \"Denis Lilly\", ssn: 345342354, date: \"12/12/2019\", status: \"Pending Info\" },\r\n                { id: \"1014\", name: \"Brian Smith\", ssn: 234523, date: \"12/12/2019\", status: \"Initial\" },\r\n                { id: \"1015\", name: \"Jack Ryan\", ssn: 534254, date: \"12/12/2019\", status: \"Initial\" }\r\n            ],\r\n            frameworkComponents: {\r\n                gridStatusBadgeRenderer: AgGridStatusBadgeRenderer,\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"grid-wrapper-archieve\" style={{ width: '100%', height: '100%' }}>\r\n                <div className=\"ag-theme-alpine ag-grid-container\" style={ {height: '300px', width: '100%'} }>\r\n                    <AgGridReact\r\n                        columnDefs={this.state.columnDefs}\r\n                        rowData={this.state.rowData}\r\n                        frameworkComponents={this.state.frameworkComponents}\r\n                        onGridSizeChanged={this.onGridSizeChanged.bind(this)}\r\n                    >\r\n                    </AgGridReact>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n    onGridSizeChanged = params => {\r\n        var gridWidth = document.getElementById('grid-wrapper-archieve').offsetWidth;\r\n        var columnsToShow = [];\r\n        var columnsToHide = [];\r\n        var totalColsWidth = 0;\r\n        var allColumns = params.columnApi.getAllColumns();\r\n        for (var i = 0; i < allColumns.length; i++) {\r\n          var column = allColumns[i];\r\n          totalColsWidth += column.getMinWidth();\r\n          if (totalColsWidth > gridWidth) {\r\n            columnsToHide.push(column.colId);\r\n          } else {\r\n            columnsToShow.push(column.colId);\r\n          }\r\n        }\r\n        params.columnApi.setColumnsVisible(columnsToShow, true);\r\n        params.columnApi.setColumnsVisible(columnsToHide, false);\r\n        params.api.sizeColumnsToFit();\r\n    };\r\n}\r\n\r\nexport default KMRArchieveTabContent;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'; \r\n\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport KMRInitialTabContent from './KMRInitialTabConent';\r\nimport KMRPendingInfoTabContent from './KMRPendingInfoTabContent';\r\nimport KMRPendingApprovalTabContent from './KMRPendingApprovalTabContent';\r\nimport KMRProcessingTabContent from './KMRProcessingTabContent';\r\nimport KMRErrorTabContent from './KMRErrorTabContent';\r\nimport KMRAcceptedTabContent from './KMRAcceptedTabContent';\r\nimport KMRRejectedTabContent from './KMRRejectedTabContent';\r\nimport KMRArchieveTabContent from './KMRArchieveTabContent';\r\n\r\nimport \"../styles/KMRClaims.css\";\r\n\r\n\r\nclass KMRClaims extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.formModalRef = React.createRef();\r\n\r\n        this.state = {\r\n            toCreate: false\r\n        }\r\n        this.goToCreateClaim = this.goToCreateClaim.bind(this);\r\n    }\r\n\r\n    render() {\r\n        \r\n        if (this.state.toCreate) {\r\n            return <Redirect to='/portal/create' />\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"claims-container\">\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <h3> Claim System Dashboard </h3>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button className=\"create-claim-btn mateffect\" variant=\"primary\" onClick={this.goToCreateClaim}> \r\n                                Create Claim \r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row className=\"filter-container\">\r\n                        <Col>\r\n                            <Accordion>\r\n                                <Card>\r\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                        Filters\r\n                                    </Accordion.Toggle>\r\n\r\n                                    <Accordion.Collapse eventKey=\"0\">\r\n                                        <Card.Body>\r\n                                            <Form>\r\n                                                <Form.Row>\r\n                                                    <Form.Group as={Col} controlId=\"formGridClaimid\">\r\n                                                        <Form.Label>Claim Id</Form.Label>\r\n                                                        <Form.Control type=\"number\" placeholder=\"Enter Calim Id\" />\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group as={Col} controlId=\"formGridMembername\">\r\n                                                        <Form.Label>Member Name</Form.Label>\r\n                                                        <Form.Control type=\"text\" placeholder=\"Member Name\" />\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group as={Col} controlId=\"formGridStatus\">\r\n                                                        <Form.Label>Status</Form.Label>\r\n                                                        <Form.Control as=\"select\" placeholder=\"Enter Calim Id\">\r\n                                                            <option> Initial </option>\r\n                                                            <option> Pending Information </option>\r\n                                                            <option> Pending Approval </option>\r\n                                                            <option> Processing </option>\r\n                                                            <option> Error </option>\r\n                                                            <option> Approved </option>\r\n                                                            <option> Reject </option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group as={Col} controlId=\"formGridSubmissiondate\">\r\n                                                        <Form.Label>Submission Date</Form.Label>\r\n                                                        <Form.Control type=\"date\" placeholder=\"Submission Date\" />\r\n                                                    </Form.Group>\r\n                                                </Form.Row>\r\n\r\n                                                <Form.Row>\r\n                                                    <Button variant=\"primary\" type=\"submit\">\r\n                                                        Submit\r\n                                                    </Button>\r\n                                                </Form.Row>\r\n                                            </Form>\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                </Card>\r\n                            </Accordion>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row className=\"tabs-container\">\r\n                        <Col>\r\n                            <Tabs defaultActiveKey=\"initial\" id=\"uncontrolled-tab-example\">\r\n                                <Tab eventKey=\"initial\" \r\n                                    title={\r\n                                            <React.Fragment>\r\n                                                Initial\r\n                                                &nbsp; <Badge variant='primary'>20</Badge>\r\n                                            </React.Fragment>\r\n                                }>\r\n                                    <KMRInitialTabContent></KMRInitialTabContent>\r\n                                </Tab>\r\n\r\n                                <Tab eventKey=\"pendinginfo\" \r\n                                    title={\r\n                                            <React.Fragment>\r\n                                                Pending Information\r\n                                                &nbsp; <Badge variant='warning'>12</Badge>\r\n                                            </React.Fragment>\r\n                                }>\r\n                                    <KMRPendingInfoTabContent></KMRPendingInfoTabContent>\r\n                                </Tab>\r\n                                <Tab eventKey=\"pendingapproval\" \r\n                                    title={\r\n                                            <React.Fragment>\r\n                                                Pending Approval\r\n                                                &nbsp; <Badge variant='info'>37</Badge>\r\n                                            </React.Fragment>\r\n                                }>\r\n                                    <KMRPendingApprovalTabContent></KMRPendingApprovalTabContent>\r\n                                </Tab>\r\n                                <Tab eventKey=\"processing\" \r\n                                    title={\r\n                                            <React.Fragment>\r\n                                                Processing\r\n                                                &nbsp; <Badge variant='success'>6</Badge>\r\n                                            </React.Fragment>\r\n                                }>\r\n                                    <KMRProcessingTabContent></KMRProcessingTabContent>\r\n                                </Tab>\r\n                                <Tab eventKey=\"error\" \r\n                                    title={\r\n                                            <React.Fragment>\r\n                                                Error\r\n                                                &nbsp; <Badge variant='danger'>2</Badge>\r\n                                            </React.Fragment>\r\n                                }>\r\n                                    <KMRErrorTabContent></KMRErrorTabContent>\r\n                                </Tab>\r\n\r\n                                <Tab eventKey=\"approved\" title=\"Approved\">\r\n                                    <KMRAcceptedTabContent></KMRAcceptedTabContent>\r\n                                </Tab>\r\n                                <Tab eventKey=\"rejected\" title=\"Rejected\">\r\n                                    <KMRRejectedTabContent></KMRRejectedTabContent>\r\n                                </Tab>\r\n                                <Tab eventKey=\"archieve\" title=\"Archieve\">\r\n                                    <KMRArchieveTabContent></KMRArchieveTabContent>\r\n                                </Tab>\r\n                            </Tabs>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n    \r\n    goToCreateClaim(e) {\r\n        this.setState(() => ({ toCreate: true }))\r\n    }\r\n}\r\n\r\nexport default KMRClaims;","class Utility {\r\n\r\n    static formatDate(date) {\r\n\r\n        var year = date.substring(0, 4);\r\n        var month = date.substring(4, 6);\r\n        var day = date.substring(6, 8);\r\n\r\n        return year + \"-\" + month + \"-\" + day;\r\n\r\n    }\r\n\r\n    static nextLetter(s){\r\n        var c= s.charCodeAt(0);\r\n        switch(c){\r\n            case 90: return 'A';\r\n            case 122: return 'a';\r\n            default: { return String.fromCharCode(++c);}\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default Utility;","import React from 'react';\r\n\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\r\nimport Autosuggest from 'react-autosuggest';\r\n\r\nimport ApiService from './../../service/APIService';\r\nimport UtilityService from './../../service/UtilityService';\r\n\r\nimport \"./style.css\";\r\nimport 'bootstrap-daterangepicker/daterangepicker.css';\r\n\r\nclass CreateClaim extends React.Component {\r\n\r\n    ctrlKeyPressed = false;\r\n    altKeyPressed = false;\r\n\r\n    isLoading= false;\r\n    options = [];   \r\n\r\n    apiService = new ApiService();\r\n\r\n    inputProps = {\r\n        placeholder: 'Member SSN',\r\n        value: \"\",\r\n        onChange: this.onChange\r\n    };\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.types = ['MEDICAL', 'DENTAL']\r\n        this.selectedTabIndex = 0;\r\n        this.autoSaveInterval = undefined;\r\n        this.lineItem = [\r\n            {name: 'serviceFrom', type: 'date', value: '', label: 'Service From'},\r\n            {name: 'serviceThru', type: 'date', value: '', label: 'Service Thru'},\r\n            {name: 'place', type: 'text', value: '', label: 'Place'},\r\n            {name: 'cpt', type: 'dropdown', value: '', options: [], masterdata: 'CPTMaster', label: 'CPT'},\r\n            {name: 'procedure', type: 'dropdown', value: '', options: [], masterdata: 'ProcedureMaster', label: 'Procedure'},\r\n            {name: 'modifier', type: 'text', value: '', label: 'Modifier'},\r\n            {name: 'diagnosisPointer', type: 'text', value: '', label: 'Diagnosis Pointer'},\r\n            {name: 'charges', type: 'number', value: '', label: 'Charges'},\r\n            {name: 'allowed', type: 'number', value: '', label: 'Allowed'},\r\n            {name: 'deductible', type: 'number', value: '', label: 'Deductible'},\r\n            {name: 'notCovered', type: 'number', value: '', label: 'Not Covered'},\r\n            {name: 'payment', type: 'number', value: '', label: 'Payment'},\r\n            {name: 'exclusionCode', type: 'dropdown', value: '', options: [], masterdata: 'ExclusionCodeMaster', label: 'Exclusion Code'}\r\n        ]\r\n\r\n        /*\r\n            NOTE: the attribute name starts with \r\n            1. member\r\n            2. patient\r\n            3. diagnosis\r\n            4. other\r\n             - needs to be used if are required to save\r\n        */\r\n        this.state = {\r\n            key: 2,\r\n\r\n            /* Claim ID */\r\n            claimId: \"\",\r\n            claimIdHeader: \"\",\r\n\r\n            /* Member Auto Suggest */\r\n            value: '',\r\n            options: [],\r\n            isLoading: false,\r\n\r\n            /* Dependent Auto Suggest */\r\n            depOptions: [],\r\n            depValue: '',\r\n            depIsLoading: false,\r\n\r\n            /* Form Data */\r\n\r\n            /* Master Details */\r\n            masterClaimType: '',\r\n            masterReceivedDate: '',\r\n\r\n            /* Member */\r\n            memberSSN: '',\r\n            memberName: '',\r\n            memberAddress: '',\r\n            memberPolicy: '',\r\n            memberCity: '',\r\n            memberState: '',\r\n            memberZip: '',\r\n            memberTelephone: '',\r\n            memberDob: '',\r\n            memberSex: '',\r\n            memberEmployer: '',\r\n            memberInsurancePlan: '',\r\n\r\n            /* Patient */\r\n            patientRelation: '',\r\n            patientSSN: '',\r\n            patientName: '',\r\n            patientDob: '',\r\n            patientSex: '',\r\n            patientAddress: '',\r\n            patientCity: '',\r\n            patientState: '',\r\n            patientZip: '',\r\n            patientTelePhone: '',\r\n            patientMStat: '',\r\n            patientEStat: '',\r\n            patientCondition: '',\r\n\r\n            /* Diagnosis */\r\n            diagnosisCodes : [\r\n                {pointer: 'A', value: ''}\r\n            ],\r\n\r\n            diagnosisLineItems : [\r\n                JSON.parse(JSON.stringify(this.lineItem))\r\n            ],\r\n\r\n            /* Total */\r\n            totalCharges: 0,\r\n            totalAllowed: 0,\r\n            totalDeductible: 0,\r\n            totalNotCovered: 0,\r\n            totalPayment: 0,\r\n\r\n            /* Others */\r\n            othersFedId: '',\r\n            othersPatientAccountNum: '',\r\n            othersPendCode: '',\r\n            othersBillingNo: '',\r\n            othersPayee: '',\r\n            othersProvider: '',\r\n            othersProviderAddress: '',\r\n\r\n            /* Popup */\r\n            showClaimPopup: false,\r\n            historyClaims: []\r\n        };\r\n\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n        this.handlePatientChange = this.handlePatientChange.bind(this);\r\n        this.handleDiagnosticCodeChange = this.handleDiagnosticCodeChange.bind(this);\r\n        this.handleLineItemChange = this.handleLineItemChange.bind(this);\r\n        this.commonChangeHandler = this.commonChangeHandler.bind(this);\r\n        this.autoSave = this.autoSave.bind(this);\r\n\r\n        this.tabNavKeyCheck();\r\n    }\r\n\r\n    componentDidMount() {\r\n        var claimId = this.props.match.params.claimid;\r\n        //means edit claim\r\n        if(claimId != undefined){\r\n            this.fetchClaim(claimId);\r\n            this.setState({\r\n                \"claimId\" : claimId,\r\n                \"claimIdHeader\" : \"[ Claim# : \" + claimId + \" ]\"\r\n            });\r\n        }\r\n        else {\r\n            //means new claim\r\n            this.setState({masterReceivedDate : moment().format(\"YYYY-MM-DD\")})\r\n        }\r\n\r\n        this.populateMasterDropdown();\r\n    }\r\n\r\n    populateMasterDropdown() {\r\n\r\n        //first fill up which are from user input\r\n        for(var i=0; i< this.lineItem.length; i++) {\r\n            if(this.lineItem[i].type == \"dropdown\") {\r\n                if(this.lineItem[i].masterdata == \"diagnosispointer\") {\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        //Then fill up from master data items\r\n        for(var i=0; i< this.lineItem.length; i++) {\r\n            if(this.lineItem[i].type == \"dropdown\") {\r\n                if(this.lineItem[i].masterdata != \"diagnosispointer\") {\r\n                    this.invokeAPIToPopulateOptions(i, this.lineItem[i].masterdata);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    invokeAPIToPopulateOptions(index, masterData) {\r\n        var root = this;\r\n        var url = this.apiService.getApiUrl(\"getMasterItemDropdownList\", [this.lineItem[index].masterdata]);\r\n        this.apiService.invokeGet(url, this, function (response) {\r\n            var data = response.data;\r\n\r\n            root.lineItem[index].options = root.constructDropdownArray(data, masterData)\r\n            root.setState({\r\n                diagnosisLineItems : [JSON.parse(JSON.stringify(root.lineItem))]\r\n            })\r\n        })\r\n    }\r\n\r\n    constructDropdownArray(serverData, masterItem) {\r\n        var list = [];\r\n        for(var i = 0; i < serverData.length; i++) {\r\n            var obj = {};\r\n            if (masterItem == \"CPTMaster\") {\r\n                obj.value = serverData[i]['CPT Id'];\r\n                obj.display = serverData[i]['CPT Number'] + \" ( \" + serverData[i]['Description'] + \")\";\r\n            }\r\n            else if(masterItem == \"ProcedureMaster\") {\r\n                obj.value = serverData[i]['Procedure Id'];\r\n                obj.display = serverData[i]['Procedure Number'] + \" ( \" + serverData[i]['Description'] + \")\";\r\n            } else if(masterItem == \"ExclusionCodeMaster\") {\r\n                obj.value = serverData[i]['Exclusion Code Id'];\r\n                obj.display = serverData[i]['Exclusion Code'] + \" ( \" + serverData[i]['Description'] + \")\";\r\n            }\r\n            list.push(obj);\r\n        }\r\n        return list;\r\n    }\r\n\r\n    fetchClaim(claimId) {\r\n\r\n        var url = this.apiService.getApiUrl(\"getClaimById\", [claimId]);\r\n        var root = this;\r\n        this.apiService.invokeGet(url, this, function(response){\r\n            var obj = response.data\r\n\r\n            for (var key in obj) {\r\n                if (obj.hasOwnProperty(key)) {\r\n                    var val = obj[key];\r\n                    if(key == 'diagnosisLineItems') {\r\n                        \r\n                        var finArr = [];\r\n                        for(var i=0; i< val.length; i++) {\r\n                            var itemObj = val[i];\r\n                            var tempObj = {};\r\n                            var tempArr = [];\r\n                            for (var itemKey in itemObj) {\r\n                                tempObj['name'] = itemKey; \r\n                                tempObj['type'] = \"text\"; \r\n                                tempObj['value'] = itemObj[itemKey]; \r\n                                tempArr.push(tempObj);\r\n                            }\r\n                            finArr.push(tempArr);\r\n                        }\r\n\r\n                        obj[key] = finArr;\r\n                    }\r\n                }\r\n            }\r\n\r\n            root.setState(obj);\r\n            \r\n        })\r\n    }\r\n\r\n    tabNavKeyCheck() {\r\n        var root = this;\r\n        document.onkeydown = function(e) {\r\n\r\n            e = e || window.event;\r\n            var key = e.key || e.keyIdentifier || e.keyCode;\r\n\r\n            if(e.ctrlKey) { root.ctrlKeyPressed = true; }\r\n\r\n            if(key == 'AltGraph') {\r\n                //if(root.selectedTabIndex == 2) { //this if was required earlier because, then UI was tabbed based\r\n                    root.state.diagnosisLineItems.push(JSON.parse(JSON.stringify(root.lineItem)));\r\n               // }\r\n            }\r\n\r\n            if (e.keyCode == '37') {\r\n                if(root.ctrlKeyPressed) {\r\n                    if(root.selectedTabIndex > 0)root.selectedTabIndex--;\r\n                }\r\n            }\r\n            else if (e.keyCode == '39') {\r\n                if(root.ctrlKeyPressed) {\r\n                    if(root.selectedTabIndex < 4)root.selectedTabIndex++;\r\n                }\r\n            }\r\n            root.handleSelect(this.selectedTabIndex, false);\r\n            this.ctrlKeyPressed = false;\r\n        }\r\n    }\r\n\r\n    addNewLineItem() {\r\n        var lineItems = this.state.diagnosisLineItems;\r\n        lineItems.push(JSON.parse(JSON.stringify(this.lineItem)));\r\n        this.setState({\r\n            diagnosisLineItems: lineItems\r\n        })\r\n    }\r\n\r\n    handleSelect(key, mouseClick = true) {\r\n        if(mouseClick) {\r\n            this.selectedTabIndex = key;\r\n        }\r\n        this.setState({key});\r\n    }\r\n\r\n    autoPopulateMember(selectedMember) {\r\n\r\n        if(selectedMember == undefined) return;\r\n\r\n        var root = this;\r\n        this.setState(\r\n            {\r\n                memberSSN:selectedMember.ssn,\r\n                memberName:selectedMember.fname + ' ' + selectedMember.lname,\r\n                memberAddress:selectedMember.address1 + ' ' + selectedMember.address2,\r\n                memberPolicy:'',\r\n                memberCity:selectedMember.city,\r\n                memberState:selectedMember.state,\r\n                memberZip:selectedMember.zip1,\r\n                memberTelephone:selectedMember.phone,\r\n                memberDob:UtilityService.formatDate(selectedMember.dob),\r\n                memberSex:selectedMember.sex,\r\n                memberEmployer:'',\r\n                memberInsurancePlan :''\r\n            }, function() {\r\n                root.autoSave();\r\n                root.fetchDependentList();\r\n                document.getElementById(\"select-dependent\").focus();\r\n                //document.getElementById(\"select-dependent\").scrollIntoView();\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    handlePatientChange(event) {\r\n\r\n        var selectedValue = event.target.value;\r\n        if(selectedValue == \"\")return;\r\n        var root = this;\r\n        if(selectedValue == 'Self') {\r\n\r\n            this.setState(\r\n                {\r\n                    patientRelation: 'Self',\r\n                    patientSSN : this.state.memberSSN,\r\n                    patientName : this.state.memberName,\r\n                    patientDob : this.state.memberDob,\r\n                    patientSex : this.state.memberSex,\r\n                    patientAddress : this.state.memberAddress,\r\n                    patientCity : this.state.memberCity,\r\n                    patientState : this.state.memberState,\r\n                    patientZip : this.state.memberZip,\r\n                    patientTelePhone : this.state.memberTelephone,\r\n                    patientMStat : '',\r\n                    patientEStat : '',\r\n                    patientCondition : ''\r\n                }, function() {\r\n                        root.autoSave();\r\n                }\r\n            )\r\n        } else {\r\n            for(var i=0; i< this.state.depOptions.length; i++) {\r\n                if(this.state.depOptions[i].dssn == selectedValue) {\r\n                    this.autoPopulatePatient(this.state.depOptions[i]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    autoPopulatePatient(selectedDependent) {\r\n\r\n        if(selectedDependent == undefined) return;\r\n\r\n        if(selectedDependent.relation == 'W')selectedDependent.relation = 'Wife';\r\n        else if(selectedDependent.relation == 'S')selectedDependent.relation = 'Son';\r\n        else if(selectedDependent.relation == 'D')selectedDependent.relation = 'Daughter';\r\n\r\n        var root = this;\r\n        this.setState(\r\n            {\r\n                patientRelation: selectedDependent.relation,\r\n                patientSSN: selectedDependent.dssn,\r\n                patientName: selectedDependent.fname + ' ' + selectedDependent.lname,\r\n                patientAddress: this.state.memberAddress,\r\n                patientPolicy: '',\r\n                patientCity: this.state.memberCity,\r\n                patientState: this.state.memberState,\r\n                patientZip: this.state.memberZip,\r\n                patientTelephone: selectedDependent.phone,\r\n                patientDob: UtilityService.formatDate(selectedDependent.dob),\r\n                patientSex: selectedDependent.sex,\r\n                patientEmployer: '',\r\n                patientInsurancePlan: ''\r\n            }, function() {\r\n                root.autoSave();\r\n            }\r\n        )\r\n    }\r\n\r\n    handleDiagnosticCodeChange(event) {\r\n\r\n        var root = this;\r\n        var val = event.target.value;\r\n        var diagnosis = this.state.diagnosisCodes;\r\n        var index = event.target.dataset.index\r\n        diagnosis[index].value = val;\r\n\r\n        for(var i=0; i< diagnosis.length; i++) {\r\n            if(diagnosis[i].value.trim() == \"\") {\r\n                diagnosis.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        for(var i=0; i< diagnosis.length; i++) {\r\n            if(i == 0)diagnosis[i].pointer = 'A';\r\n            else diagnosis.pointer = UtilityService.nextLetter(diagnosis[i - 1].pointer);\r\n        }\r\n\r\n        var obj = {pointer: UtilityService.nextLetter(diagnosis[diagnosis.length - 1].pointer), value: \"\"}\r\n        diagnosis.push(obj);\r\n\r\n        this.setState({diagnosisCodes: diagnosis}, function(){\r\n            root.autoSave();\r\n        })\r\n    }\r\n\r\n    fetchDependentList() {\r\n        var root = this;\r\n        var depedentFetchUrl = this.apiService.getApiUrl(\"fetchDepedentByMember\", [this.state.memberSSN]);\r\n        this.apiService.invokeGet(depedentFetchUrl, this, function(response) {\r\n            console.log(response);\r\n            root.setState({depOptions : response.data});\r\n        });\r\n    }\r\n\r\n    handleLineItemChange(event) {\r\n        var index = event.target.dataset.index;\r\n        var name = event.target.dataset.name;\r\n\r\n        var lineItemsArr = JSON.parse(JSON.stringify(this.state.diagnosisLineItems));\r\n\r\n        var totalCharges = 0;\r\n        var totalAllowed = 0\r\n        var totalDeductible = 0;\r\n        var totalNotCovered = 0;\r\n        var totalPayment = 0;\r\n\r\n        for(var i=0; i< lineItemsArr[index].length; i++) {\r\n            if (lineItemsArr[index][i].name == name) {\r\n                lineItemsArr[index][i].value = event.target.value;\r\n            }\r\n        }\r\n\r\n        for(var j=0; j< lineItemsArr.length; j++) {\r\n            for(var i=0; i< lineItemsArr[j].length; i++) {\r\n                console.log(lineItemsArr[index][i].name);\r\n                if (lineItemsArr[index][i].name == \"charges\") totalCharges += isNaN(parseFloat(lineItemsArr[j][i].value)) ? 0 : parseFloat(lineItemsArr[j][i].value);\r\n                if (lineItemsArr[index][i].name == \"allowed\") totalAllowed += isNaN(parseFloat(lineItemsArr[j][i].value)) ? 0 : parseFloat(lineItemsArr[j][i].value);\r\n                if (lineItemsArr[index][i].name == \"deductible\") totalDeductible += isNaN(parseFloat(lineItemsArr[j][i].value)) ? 0 : parseFloat(lineItemsArr[j][i].value);\r\n                if (lineItemsArr[index][i].name == \"notCovered\") totalNotCovered += isNaN(parseFloat(lineItemsArr[j][i].value)) ? 0 : parseFloat(lineItemsArr[j][i].value);\r\n                if (lineItemsArr[index][i].name == \"payment\") totalPayment += isNaN(parseFloat(lineItemsArr[j][i].value)) ? 0 :  parseFloat(lineItemsArr[j][i].value);\r\n            }\r\n        }\r\n        console.log(lineItemsArr);\r\n\r\n        var root = this;\r\n        this.setState({\r\n            diagnosisLineItems: lineItemsArr,\r\n            totalCharges: totalCharges,\r\n            totalAllowed: totalAllowed,\r\n            totalDeductible: totalDeductible,\r\n            totalNotCovered: totalNotCovered,\r\n            totalPayment: totalPayment,\r\n        }, function() {\r\n            root.autoSave()\r\n        })\r\n    }\r\n\r\n    commonChangeHandler(event) {\r\n\r\n        var root = this;\r\n        var name = event.target.dataset.name;\r\n        this.setState({[name]: event.target.value}, function() {\r\n            root.autoSave();\r\n        });\r\n    }\r\n\r\n    autoSave(){\r\n        \r\n        document.getElementsByClassName(\"small-text\")[0].classList.add(\"blink\");\r\n        if(this.autoSaveInterval != undefined)\r\n            clearInterval(this.autoSaveInterval);\r\n        \r\n        var root = this;\r\n\r\n        this.autoSaveInterval = setTimeout(function(){\r\n\r\n            var autoSaveData = {};\r\n\r\n            for (var key in root.state) {\r\n                if (root.state.hasOwnProperty(key)) {\r\n\r\n                    if(\r\n                        key.startsWith(\"master\") || key.startsWith(\"member\") || key.startsWith(\"patient\") || \r\n                        key.startsWith(\"diagnosis\") || key.startsWith(\"other\")) \r\n                    {\r\n                            if(key == \"diagnosisLineItems\") {\r\n\r\n                                var modifiedArr = [];\r\n                                for(var i=0; i<root.state[key].length; i++) {\r\n\r\n                                    var innerArr = root.state[key][i];\r\n                                    var obj = {};\r\n                                    for(var j=0; j< innerArr.length; j++) {\r\n                                        obj[innerArr[j].name] = innerArr[j].value;\r\n                                    }\r\n                                    modifiedArr.push(obj);\r\n                                }\r\n                                autoSaveData[key] = modifiedArr;\r\n\r\n                            } else {\r\n                                autoSaveData[key] = root.state[key];\r\n                            }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(root.state.claimId != undefined)\r\n                autoSaveData['id'] = root.state.claimId;\r\n            \r\n            var autoSaveUrl = root.apiService.getApiUrl(\"claimAutoSave\");\r\n            root.apiService.invokePost(autoSaveUrl, JSON.stringify(autoSaveData), root, function(response) {\r\n                //console.log(response);\r\n                if(response.status === \"success\"){\r\n                    root.setState({\"claimId\" : response.data.id});\r\n                    root.setState({\"claimIdHeader\" : \"[ Claim# : \" + response.data.id + \"]\"});\r\n                }\r\n                document.getElementsByClassName(\"small-text\")[0].classList.remove(\"blink\");\r\n            });\r\n\r\n        }, 1500)\r\n    }\r\n\r\n    goToDashBoard() {\r\n        window.location.href = \"/portal/dashboard\";\r\n    }\r\n\r\n    clearForm() {\r\n        window.location.reload();\r\n    }\r\n\r\n    showClaimPopup() {\r\n\r\n        if(this.state.memberSSN.length == 0) {\r\n            alert(\"Member is not selected\");\r\n            return;\r\n        }\r\n\r\n        this.setState({showClaimPopup : true});\r\n\r\n        var root = this;\r\n        var claimHistoryUrl = this.apiService.getApiUrl(\"getClaimByMember\", [this.state.memberSSN]);\r\n        this.apiService.invokeGet(claimHistoryUrl, this, function(response) {\r\n            root.setState({historyClaims : response.data});\r\n        });\r\n    }\r\n\r\n    handleClaimPopupClose() {\r\n        this.setState({showClaimPopup : false});\r\n    }\r\n\r\n    openHistoryClaim(event) {\r\n        var claimId = event.target.dataset.claimid;\r\n        window.open(\r\n            window.location.href + \"/\" + claimId,\r\n            \"History Claim\",\r\n            \"resizable,scrollbars,status\"\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"create-claim-container\">\r\n                <Row className=\"headerRow\">\r\n                    <Col>\r\n                        <span className=\"h3-header\"> Claim Entry </span>\r\n                        <span className=\"h3-header\"> {this.state.claimIdHeader} </span>\r\n                        <span className='small-text'> Saving... </span>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        {/*<Button className=\"adjudicate-btn mateffect\" variant=\"primary\">\r\n                            Adjudicate\r\n                        </Button> */}\r\n\r\n                        <Button className=\"clear-btn mateffect\" variant=\"primary\" onClick={this.clearForm.bind(this)}>\r\n                            Clear\r\n                        </Button>\r\n\r\n                        <Button className=\"clear-btn mateffect\" variant=\"primary\" onClick={this.showClaimPopup.bind(this)}>\r\n                            Claim History\r\n                        </Button>\r\n\r\n                        <Button className=\"claim-dashboard-btn mateffect\" variant=\"primary\" onClick={this.goToDashBoard.bind(this)}> \r\n                            Claim Dashboard\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Form>\r\n                    <Tabs activeKey={this.selectedTabIndex} id=\"create-claim-tabs\" className=\"create-claim-tabs\" onSelect={this.handleSelect}>\r\n                        <Tab eventKey={0} title=\"Claim Information\">\r\n                            <Container fluid>\r\n                                {/* Tab content start */}\r\n                                <Form.Group as={Row} className=\"first-row\" controlId=\"programTypes\">\r\n                                        <Form.Label column md=\"2\" sm=\"2\">\r\n                                            Claim Type : \r\n                                        </Form.Label>\r\n                                        \r\n                                        <Col md=\"2\" sm=\"2\">\r\n                                            <Form.Control as=\"select\" value={this.state.masterClaimType} data-name=\"masterClaimType\" onChange={this.commonChangeHandler}>\r\n                                                { this.types.map((type) => (\r\n                                                    <option value={type}> \r\n                                                        {type} \r\n                                                    </option>\r\n                                                )) }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Form.Label column md=\"2\" sm=\"2\">\r\n                                            Received On : \r\n                                        </Form.Label>\r\n                                        \r\n                                        <Col md=\"2\" sm=\"2\">\r\n                                            <Form.Control type=\"date\" value={this.state.masterReceivedDate} data-name=\"masterReceivedDate\" onChange={this.commonChangeHandler}/>\r\n                                        </Col>\r\n\r\n                                        <Form.Label column md=\"2\" sm=\"2\">\r\n                                            Pend Code :\r\n                                        </Form.Label>\r\n\r\n                                        <Col md=\"2\" sm=\"2\">\r\n                                            <Form.Control type=\"text\" data-name=\"othersPendCode\" value={this.state.othersPendCode} onChange={this.commonChangeHandler} placeholder=\"Enter Pend Code\" />\r\n                                        </Col>\r\n                                </Form.Group>\r\n\r\n                                <hr />\r\n\r\n                                <Form.Row className=\"form-row\">\r\n                                    <Form.Group as={Col} controlId=\"insuredId\">\r\n                                        <Form.Label> Member's Name / SSN </Form.Label>\r\n                                        <AsyncTypeahead\r\n                                            id=\"member-auto-suggest\"\r\n                                            placeholder=\"Search Name / SSN\"\r\n                                            maxResults='6'\r\n                                            autoFocus=\"true\"\r\n                                            isLoading={this.state.isLoading}\r\n                                            labelKey={option => `${option.ssn} ${option.fname} ${option.lname}`}\r\n                                            onSearch={(query) => {\r\n                                                    \r\n                                                this.setState({isLoading: true});\r\n                                                fetch(this.apiService.getApiUrl(\"memberSuggestUrl\", [query]))\r\n                                                .then(resp => resp.json())\r\n                                                .then(json => {\r\n                                                    this.setState({\r\n                                                        options: json.data\r\n                                                    });\r\n                                                    this.setState({isLoading: false});\r\n                                                });\r\n                                            }}\r\n\r\n                                            onChange={(selected) => {\r\n\r\n                                                this.autoPopulateMember(selected[0])\r\n                                            }}\r\n\r\n                                            renderMenuItemChildren={(option, props) => (\r\n                                                <div className=\"suggestionContainer\">\r\n                                                    <span>{option.fname} {option.lname}</span>\r\n                                                    <span className=\"smallSSNText\"> (SSN : {option.ssn}) </span>\r\n                                                </div>\r\n                                            )}\r\n                                            options={this.state.options}\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"memberName\">\r\n                                        <Form.Label>\r\n                                            Member's Name \r\n                                        </Form.Label>\r\n                                        <Form.Control type=\"text\" value={this.state.memberName} placeholder=\"Enter Insured Name\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"feca\">\r\n                                        <Form.Label> Member's Policy Group or FECA#</Form.Label>\r\n                                        <Form.Control type=\"text\" value={this.state.memberPolicy} placeholder=\"Enter Insured FECA#\" />\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n\r\n                                <Form.Row className=\"form-row odd-row\">\r\n\r\n                                    <Form.Group as={Col} controlId=\"memberAddress\">\r\n                                        <Form.Label>Member's Address</Form.Label>\r\n                                        <Form.Control type=\"text\" value={this.state.memberAddress} placeholder=\"Enter Insured Address\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"memberCity\">\r\n                                        <Form.Label>City </Form.Label>\r\n                                        <Form.Control type=\"text\" value={this.state.memberCity} placeholder=\"City\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"memberState\">\r\n                                        <Form.Label>\r\n                                            Member's State\r\n                                        </Form.Label>\r\n                                        <Form.Control type=\"text\" value={this.state.memberState} placeholder=\"State\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"telephone\" className=\"hidden\">\r\n                                        <Form.Label> Telephone# </Form.Label>\r\n                                        <Form.Control type=\"text\" value={this.state.memberTelephone} placeholder=\"(XXX) - XXX - XXXX\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"zip\">\r\n                                        <Form.Label>Zip</Form.Label>\r\n                                        <Form.Control type=\"text\" value={this.state.memberZip} placeholder=\"Zip\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"dob\">\r\n                                        <Form.Label>Date Of Birth </Form.Label>\r\n                                        <Form.Control type=\"date\" value={this.state.memberDob} placeholder=\"DOB\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"sex\">\r\n                                        <Form.Label>\r\n                                            Sex\r\n                                        </Form.Label>\r\n                                        <Form.Control as=\"select\" value={this.state.memberSex} >\r\n                                            <option value='M'> Male </option>\r\n                                            <option value='F'> Female </option>\r\n                                        </Form.Control>\r\n                                        \r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"empname\" className=\"hidden\">\r\n                                        <Form.Label>Employer's Name</Form.Label>\r\n                                        <Form.Control type=\"text\" value={this.state.memberEmployer} placeholder=\"Employer's Name\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"insurancePlanName\" className=\"hidden\">\r\n                                        <Form.Label> Insurance Plan Name  </Form.Label>\r\n                                        <Form.Control type=\"text\" value={this.state.memberInsurancePlan} placeholder=\"Program Name\" />\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n\r\n                            </Container>\r\n\r\n                            <hr />\r\n\r\n                            <Container fluid>\r\n\r\n                                <Form.Group as={Row} className=\"first-row\" controlId=\"programTypes\">\r\n\r\n                                        <Form.Label column md=\"3\" sm=\"3\">\r\n                                            Patient\r\n                                        </Form.Label>\r\n\r\n                                        <Col md=\"3\" sm=\"3\">\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={this.state.patientSSN}\r\n                                                onChange={this.handlePatientChange}\r\n                                                id=\"select-dependent\">\r\n                                                <option value={\"\"}>Select Dependent</option>\r\n                                                <option value={\"Self\"}>Self</option>\r\n                                                {\r\n                                                    this.state.depOptions.map(function(field, index) {\r\n                                                        return (\r\n                                                            <option value={field.dssn}>\r\n                                                                {field.fname.trim() + ' ' + field.lname.trim() + ' ' + field.initial.trim()}\r\n                                                            </option>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                </Form.Group>\r\n\r\n                                <hr />\r\n                                {/* ======================= Patient Details ======================*/}\r\n                                <Form.Row className=\"first-row form-row\">\r\n\r\n                                    <Form.Group as={Col} controlId=\"relation\">\r\n                                        <Form.Label>\r\n                                            Patient Relationship To Insured\r\n                                        </Form.Label>\r\n                                        <Form.Control type=\"text\" value={this.state.patientRelation} placeholder=\"Patient Relation With Member\" readOnly={true}/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"patient-name\">\r\n                                        <Form.Label>\r\n                                            Patient's Name\r\n                                        </Form.Label>\r\n                                        <Form.Control type=\"text\" value={this.state.patientName} placeholder=\"Enter Patient Name\" readOnly={true}/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"patient-dob\">\r\n                                        <Form.Label> Patient's Date Of Birth</Form.Label>\r\n                                        <Form.Control type=\"Date\" value={this.state.patientDob} placeholder=\"Enter Patient DOB\" readOnly={true}/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"pateint-sex\">\r\n                                        <Form.Label> Patient's Sex</Form.Label>\r\n                                        <Form.Control as=\"select\" value={this.state.patientSex} readOnly={true}>\r\n                                            <option value=''>  </option>\r\n                                            <option value='M'> Male </option>\r\n                                            <option value='F'> Female </option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n\r\n                                {/* Hiding this row as per mail on Dec 8, 2020 */}\r\n                                <Form.Row className=\"form-row odd-row hidden\">\r\n\r\n                                    <Form.Group as={Col} controlId=\"patientAddress\">\r\n                                        <Form.Label>Patient's Address (No., Street)</Form.Label>\r\n                                        <Form.Control type=\"text\" value={this.state.patientAddress} placeholder=\"Enter Patient Address\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"patientCity\">\r\n                                        <Form.Label>City </Form.Label>\r\n                                        <Form.Control type=\"text\" value={this.state.patientCity} placeholder=\"City\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"patientState\">\r\n                                        <Form.Label>\r\n                                            State\r\n                                        </Form.Label>\r\n                                        <Form.Control type=\"text\" value={this.state.patientState} placeholder=\"State\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"patientZip\">\r\n                                        <Form.Label>Zip</Form.Label>\r\n                                        <Form.Control type=\"text\" value={this.state.patientZip} placeholder=\"Zip\" />\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n\r\n                                {/* Hiding this row as per mail on Dec 8, 2020 */}\r\n                                <Form.Row className=\"form-row odd-row hidden\">\r\n\r\n                                    <Form.Group as={Col} controlId=\"patientTelephone\">\r\n                                        <Form.Label> Telephone# </Form.Label>\r\n                                        <Form.Control type=\"text\" value={this.state.patientTelePhone} placeholder=\"(XXX) - XXX - XXXX\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"patientMstat\">\r\n                                        <Form.Label>\r\n                                            Patient Marital Status\r\n                                        </Form.Label>\r\n                                        <Form.Control as=\"select\" value={this.state.patientMStat}>\r\n                                            <option> Single </option>\r\n                                            <option> Married </option>\r\n                                            <option> Others </option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"patientEmpStat\">\r\n                                        <Form.Label>Patient Employment Status</Form.Label>\r\n                                        <Form.Control as=\"select\" value={this.state.patientEStat}>\r\n                                            <option> Employed </option>\r\n                                            <option> Full Time Student </option>\r\n                                            <option> Part Time Student </option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"patientCond\">\r\n                                        <Form.Label> Patient's Condition Related To </Form.Label>\r\n                                        <Form.Control as=\"select\" value={this.state.patientCondition}>\r\n                                            <option> Employment </option>\r\n                                            <option> Auto Accident </option>\r\n                                            <option> Other Accident </option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                            </Container>\r\n\r\n                            <hr />\r\n                            {/* =================== SERVICE DETAILS ====================== */}\r\n                            <Container fluid>\r\n                                <Form.Row className=\"first-row form-row\">\r\n                                    <Form.Group as={Col} controlId=\"diagnosis\">\r\n                                        <Form.Label>\r\n                                            Diagnosis Or Nature Of Illness Or Injury\r\n                                        </Form.Label>\r\n\r\n                                        <Row>\r\n                                            { this.state.diagnosisCodes.map((d, index) => (\r\n                                                <Col md=\"2\" sm=\"2\">\r\n                                                    <b> {d.pointer}. &nbsp; </b>\r\n                                                    <Form.Control\r\n                                                        className=\"uppercase-input\"\r\n                                                        type=\"text\"\r\n                                                        data-index={index}\r\n                                                        onChange={this.handleDiagnosticCodeChange}\r\n                                                        value={d.value}\r\n                                                        placeholder=\"\" />\r\n                                                </Col>\r\n                                            ))\r\n                                            }\r\n                                        </Row>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                                <Form.Row className=\"first-row form-row\">\r\n                                    <Form.Group as={Col} controlId=\"lineItems\">\r\n                                        <Form.Label>\r\n                                            Line Items\r\n                                            <span style={{fontSize:10 + \"px\"}}>\r\n                                                &nbsp; (Right Alt To Add More)\r\n                                            </span>\r\n\r\n                                            <Button className=\"addnewlineitem-btn mateffect\" variant=\"primary\" onClick={this.addNewLineItem.bind(this)}>\r\n                                                Add New Line Item\r\n                                            </Button>\r\n                                        </Form.Label>\r\n                                        <Row>\r\n                                            <hr />\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Table striped bordered hover size=\"sm\" className=\"small-header-size-table\">\r\n                                                <tbody>\r\n\r\n                                                {\r\n                                                    this.state.diagnosisLineItems.map((value, index) => {\r\n                                                        return (\r\n                                                            <tr>\r\n                                                                <td>\r\n                                                                    <div className=\"diagnosis-line-item-container\">\r\n                                                                        {\r\n                                                                            this.state.diagnosisLineItems[index].map((tVal, tIndex) => {\r\n                                                                                if(tVal.type === \"dropdown\")\r\n                                                                                    return (\r\n                                                                                        <div>\r\n                                                                                            <label> <b> {tVal.label} : </b> </label>\r\n                                                                                            <Form.Control as=\"select\"\r\n                                                                                                          data-name={tVal.name}\r\n                                                                                                          value={tVal.value}\r\n                                                                                                          data-index={index}\r\n                                                                                                          onChange={this.handleLineItemChange}>\r\n                                                                                                <option value={''}></option>\r\n                                                                                                {\r\n                                                                                                    this.state.diagnosisLineItems[index][tIndex].options.map((tVal, tIndex) => {\r\n                                                                                                        return (<option value={tVal.value}> {tVal.display} </option>)\r\n                                                                                                    })\r\n                                                                                                }\r\n                                                                                            </Form.Control>\r\n                                                                                        </div>\r\n                                                                                    )\r\n                                                                                else\r\n                                                                                    return (\r\n                                                                                        <div>\r\n                                                                                            <label> <b> {tVal.label} : </b> </label>\r\n                                                                                            <Form.Control\r\n                                                                                                onChange={this.handleLineItemChange}\r\n                                                                                                data-name={tVal.name}\r\n                                                                                                data-index={index}\r\n                                                                                                value={tVal.value}\r\n                                                                                                type={tVal.type}\r\n                                                                                            />\r\n                                                                                        </div>\r\n                                                                                    )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                    <hr />\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                                </tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <div  class={\"total-container\"}>\r\n                                                            <div>\r\n                                                                <label> <b> Total Charges : </b> </label>\r\n                                                                <Form.Control\r\n                                                                    type=\"text\"\r\n                                                                    value={this.state.totalCharges}\r\n                                                                    readonly\r\n                                                                />\r\n                                                            </div>\r\n\r\n                                                            <div>\r\n                                                                <label> <b> Total Allowed : </b> </label>\r\n                                                                <Form.Control\r\n                                                                    type=\"text\"\r\n                                                                    value={this.state.totalAllowed}\r\n                                                                    readonly\r\n                                                                />\r\n                                                            </div>\r\n\r\n                                                            <div>\r\n                                                                <label> <b> Total Deductible : </b> </label>\r\n                                                                <Form.Control\r\n                                                                    type=\"text\"\r\n                                                                    value={this.state.totalDeductible}\r\n                                                                    readonly\r\n                                                                />\r\n                                                            </div>\r\n\r\n                                                            <div>\r\n                                                                <label> <b> Total Not Covered : </b> </label>\r\n                                                                <Form.Control\r\n                                                                    type=\"text\"\r\n                                                                    value={this.state.totalNotCovered}\r\n                                                                    readonly\r\n                                                                />\r\n                                                            </div>\r\n\r\n                                                            <div>\r\n                                                                <label> <b> Total Payment : </b> </label>\r\n                                                                <Form.Control\r\n                                                                    type=\"text\"\r\n                                                                    value={this.state.totalPayment}\r\n                                                                    readonly\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </Table>\r\n                                        </Row>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                            </Container>\r\n\r\n                            <hr />\r\n                            {/* ==================  OTHERS TAB =================== */}\r\n                            <Container fluid>\r\n                                <Form.Row className=\"form-row\">\r\n                                    <Form.Group as={Col} controlId=\"fedtax\">\r\n                                        <Form.Label>Federal Tax Id# </Form.Label>\r\n                                        <Form.Control type=\"text\" data-name=\"othersFedId\" value={this.state.othersFedId} onChange={this.commonChangeHandler} placeholder=\"Enter Provider #\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"patientAcc\">\r\n                                        <Form.Label>\r\n                                            Patient Account#\r\n                                        </Form.Label>\r\n                                        <Form.Control type=\"text\" data-name=\"othersPatientAccountNum\" value={this.state.othersPatientAccountNum} onChange={this.commonChangeHandler} placeholder=\"Patient Account Number\" />\r\n                                    </Form.Group>\r\n\r\n                                    {/*<Form.Group as={Col} controlId=\"billing\">\r\n                                        <Form.Label> Billing# </Form.Label>\r\n                                        <Form.Control type=\"text\" data-name=\"othersBillingNo\" value={this.state.othersBillingNo} onChange={this.commonChangeHandler} placeholder=\"Enter Billing#\" />\r\n                                    </Form.Group> */}\r\n\r\n                                    <Form.Group as={Col} controlId=\"payee\">\r\n                                        <Form.Label> Payee </Form.Label>\r\n                                        <Form.Control as=\"select\" data-name=\"othersPayee\" value={this.state.othersPayee} onChange={this.commonChangeHandler} placeholder=\"Enter Payee\">\r\n                                            <option> M - Member </option>\r\n                                            <option> P - Provider </option>\r\n                                            <option> D - Dependent </option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"provider\">\r\n                                        <Form.Label> Provider </Form.Label>\r\n                                        <Form.Control type=\"text\" data-name=\"othersProvider\" value={this.state.othersProvider} onChange={this.commonChangeHandler} placeholder=\"Enter Provider\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"providerAddress\">\r\n                                        <Form.Label> Provider Address </Form.Label>\r\n                                        <Form.Control type=\"text\" data-name=\"othersProviderAddress\" value={this.state.othersProviderAddress} onChange={this.commonChangeHandler} placeholder=\"Enter Provider Address\" />\r\n                                    </Form.Group>\r\n\r\n                                </Form.Row>\r\n                            </Container>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </Form>\r\n\r\n                <Row className=\"headerRow\">\r\n                    <Col>\r\n                        <Button className=\"adjudicate-btn mateffect\" variant=\"primary\">\r\n                            Adjudicate\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Modal show={this.state.showClaimPopup} onHide={this.handleClaimPopupClose.bind(this)}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Claim History</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Received Date</th>\r\n                                <th>Open</th>\r\n                            </tr>\r\n                            </thead>\r\n                            {\r\n                                this.state.historyClaims.map((claim) => (\r\n                                    <tr>\r\n                                        <td> {claim.id} </td>\r\n                                        <td> {moment(claim.masterReceivedDate, \"YYYY-MM-DD\").format(\"MM/DD/YYYY\")} </td>\r\n                                        <td> <Button data-claimId={claim.id} onClick={this.openHistoryClaim.bind(this)}> Open </Button> </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </Table>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateClaim;","import React from 'react';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport {AgGridReact} from 'ag-grid-react';\r\n\r\nimport 'ag-grid-enterprise';\r\nimport { SetFilterModule } from '@ag-grid-enterprise/set-filter';\r\n\r\nimport ApiService from './../../service/APIService';\r\n\r\nimport \"./style.css\";\r\n\r\nclass MasterDataList extends React.Component {\r\n\r\n    apiService = new ApiService();\r\n    labelNameMap = {};\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            columnDefs: [\r\n                  { headerName: \"Master Items\", field: \"masteritem\", filter: true, floatingFilter: true, flex: 1 }\r\n              ],\r\n              rowData: [\r\n                  \r\n              ],\r\n\r\n              modules: [\r\n                SetFilterModule\r\n              ]\r\n        }\r\n\r\n        this.fetchMasterItemList();\r\n    }\r\n\r\n    goToDashBoard() {\r\n        window.location.href = \"/portal/dashboard\";\r\n    }\r\n\r\n    fetchMasterItemList() {\r\n\r\n        var url = this.apiService.getApiUrl(\"getMasterItems\");\r\n        var root = this;\r\n        this.apiService.invokeGet(url, this, function(response){\r\n\r\n            var data = response.data;\r\n            var rows = [];\r\n            for(var i=0; i< data.length; i++) {\r\n                var obj = {};\r\n                obj['masteritem'] = data[i]['label'];\r\n                root.labelNameMap[data[i]['label']] = data[i]['identifier'];\r\n\r\n                rows.push(obj);\r\n            }\r\n            root.setState({rowData : rows});\r\n        })\r\n    }\r\n\r\n    onCellClicked(obj) {\r\n        console.log(obj);\r\n        var cellVal = obj.data.masteritem;\r\n        var identifier = this.labelNameMap[cellVal];\r\n        window.location.href = \"/portal/masteritem/\" + identifier + \"/label/\" + cellVal;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"list-container\">\r\n                <Row className=\"headerRow\">\r\n                    <Col>\r\n                        <span className=\"h3-header\"> Master Data List </span>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Button className=\"claim-dashboard-btn mateffect\" variant=\"primary\" onClick={this.goToDashBoard.bind(this)}> \r\n                            Go To Dashboard\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <div id=\"grid-wrapper-master-item-list\" style={{ width: '100%', height: '100%' }}>\r\n                        <div className=\"ag-theme-alpine ag-grid-container\" style={ {height: '400px', width: '100%'} }>\r\n                            <AgGridReact\r\n                                modules={this.state.modules}\r\n                                columnDefs={this.state.columnDefs}\r\n                                rowData={this.state.rowData}\r\n                                frameworkComponents={this.state.frameworkComponents}\r\n                                onGridSizeChanged={this.onGridSizeChanged.bind(this)}\r\n                                onCellClicked={this.onCellClicked.bind(this)}\r\n                                \r\n                            >\r\n                            </AgGridReact>\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onGridSizeChanged = params => {\r\n        var gridWidth = document.getElementById('grid-wrapper-master-item-list').offsetWidth;\r\n        var columnsToShow = [];\r\n        var columnsToHide = [];\r\n        var totalColsWidth = 0;\r\n        var allColumns = params.columnApi.getAllColumns();\r\n        for (var i = 0; i < allColumns.length; i++) {\r\n          var column = allColumns[i];\r\n          totalColsWidth += column.getMinWidth();\r\n          if (totalColsWidth > gridWidth) {\r\n            columnsToHide.push(column.colId);\r\n          } else {\r\n            columnsToShow.push(column.colId);\r\n          }\r\n        }\r\n        params.columnApi.setColumnsVisible(columnsToShow, true);\r\n        params.columnApi.setColumnsVisible(columnsToHide, false);\r\n        params.api.sizeColumnsToFit();\r\n    };\r\n}\r\n\r\nexport default MasterDataList;","import React, { Component } from 'react';\r\n\r\nimport { MdDelete } from 'react-icons/md';\r\n\r\nexport default class AgGridActionColumnRenderer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onDeleteClick = this.onDeleteClick.bind(this);\r\n    }\r\n\r\n    onDeleteClick() {\r\n\r\n        console.log(this.props.node);\r\n        this.props.context.componentParent.delete(\r\n            this.props.node.data, this.props.node.rowIndex\r\n        );\r\n    }\r\n\r\n    render() {\r\n            if(this.props.value === \"delete\"){\r\n                return (\r\n                    <>\r\n                        <MdDelete size='2em' onClick={this.onDeleteClick}/>\r\n                    </>\r\n                )\r\n            }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport AgGridActionColumnRenderer from './AgGridActionColumnRenderer'\r\n\r\nimport { AgGridReact } from '@ag-grid-community/react';\r\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\r\n\r\nimport { MdFileDownload } from 'react-icons/md';\r\n\r\nimport ApiService from './../../service/APIService';\r\n\r\nimport \"./style.css\";\r\n\r\nclass MasterDataItem extends React.Component {\r\n\r\n    apiService = new ApiService();\r\n    itemSpecificProperties = {\r\n        \"CoverageTypeMaster\" : {\r\n            \"id\" : \"Coverage Type Id\",\r\n            \"hiddenCols\" : [\"Coverage Type Id\" ]\r\n        },\r\n\r\n        \"NetworkMaster\" : {\r\n                \"id\" : \"Network Id\",\r\n                \"hiddenCols\" : [\"Network Id\" ]\r\n        },\r\n\r\n        \"ClaimTypeMaster\" : {\r\n                \"id\" : \"Claim Type Id\",\r\n                \"hiddenCols\" : [\"Claim Type Id\" ]\r\n        },\r\n\r\n        \"ExclusionCodeMaster\" : {\r\n                \"id\" : \"Exclusion Code Id\",\r\n                \"hiddenCols\" : [\"Exclusion Code Id\" ]\r\n        },\r\n\r\n        \"StatusTypeMaster\" : {\r\n                \"id\" : \"Status Type Id\",\r\n                \"hiddenCols\" : [\"Status Type Id\" ]\r\n        },\r\n\r\n        \"SupervisorMaster\" : {\r\n                \"id\" : \"Supervisor Id\",\r\n                \"hiddenCols\" : [\"Supervisor Id\" ]\r\n        },\r\n\r\n        \"EligibilityOverrideReasonMaster\" : {\r\n                \"id\" : \"Eligibility Override Reason Id\",\r\n                \"hiddenCols\" : [\"Eligibility Override Reason Id\" ]\r\n        },\r\n\r\n        \"ReasonforHoldingClaimMaster\" : {\r\n                \"id\" : \"Reason for Holding Claim Id\",\r\n                \"hiddenCols\" : [\"Reason for Holding Claim Id\" ]\r\n        },\r\n\r\n        \"AdjudicationSequenceMaster\" : {\r\n                \"id\" : \"Adjudication Sequence Id\",\r\n                \"hiddenCols\" : [\"Adjudication Sequence Id\" ]\r\n        },\r\n\r\n        \"ProviderMaster\" : {\r\n                \"id\" : \"Provider Id\",\r\n                \"hiddenCols\" : [\"Provider Id\" , \"Address 2\",\"State\",\"Zip\",\"Zip4\",\"Telephone\",\"Foreign\",\"Hospital/Office Code\",\"Comments\",\"Tax ID#\",\"Provider Type\"]\r\n        },\r\n\r\n        \"ProviderStatusTypeMaster\" : {\r\n                \"id\" : \"Provider Status Type Id\",\r\n                \"hiddenCols\" : [\"Provider Status Type Id\" ]\r\n        },\r\n\r\n        \"CPTMaster\" : {\r\n                \"id\" : \"CPT Id\",\r\n                \"hiddenCols\" : [\"CPT Id\" ]\r\n        },\r\n\r\n        \"SpecialProviderCPTMaster\" : {\r\n                \"id\" : \"Special Provider CPT Id\",\r\n                \"hiddenCols\" : [\"Special Provider CPT Id\" , \"Description\"]\r\n        },\r\n\r\n        \"SpecialClaimTypeCPTMaster\" : {\r\n                \"id\" : \"Special Claim Type CPT Id\",\r\n                \"hiddenCols\" : [\"Special Claim Type CPT Id\" , \"Description\"]\r\n        },\r\n\r\n        \"ICD10Master\" : {\r\n                \"id\" : \"ICD-10 Id\",\r\n                \"hiddenCols\" : [\"ICD-10 Id\" ]\r\n        },\r\n\r\n        \"ProcedureMaster\" : {\r\n                \"id\" : \"Procedure Id\",\r\n                \"hiddenCols\" : [\"Procedure Id\" ]\r\n        },\r\n\r\n        \"LimitsMaster\" : {\r\n                \"id\" : \"Limits Id\",\r\n                \"hiddenCols\" : [\"Limits Id\" , \"Medical Lifetime Limit for Coverage Type\",\"Dental Family Coverage for Coverage Type\",\"Dental Yearly Limit for Coverage Type\",\"Dental Lifetime Limit for Coverage Type\",\"Prescription Family Coverage for Coverage Type\",\"Prescription Yearly Limit for Coverage Type\",\"Prescription Lifetime Limit for Coverage Type\",\"Track Basic Limits for Coverage Type\",\"Basic Yearly Limit for Coverage Type\",\"Basic Lifetime Limit for Coverage Type\",\"Track Major Medical Limits for Coverage Type\",\"Major Medical Yearly Limit for Coverage Type\",\"Major Medical Lifetime Limit for Coverage Type\",\"Member Yearly Deductible\",\"Member Lifetime Deductible\",\"Spouse Yearly Deductible\",\"Spouse Lifetime Deductible\",\"Dependent Yearly Deductible\",\"Dependent Lifetime Deductible\",\"Family Yearly Deductible\",\"Family Lifetime Deductible\",\"Member Co-Pay\",\"Spouse Co-Pay\",\"Dependent Co-Pay\",\"Family Co-Pay\"]\r\n        }\r\n    };\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.label = this.props.match.params.label;\r\n\r\n        this.state = {\r\n            columnDefs: [{}],\r\n            rowData: [{}],\r\n            label: this.label,\r\n            item: \"\",\r\n            gridAPI: null,\r\n            columnAPI: null,\r\n            alertMessage: \"\",\r\n            context: { componentParent: this },\r\n            rowSelection: 'multiple',\r\n\r\n            frameworkComponents: {\r\n                gridActionColumnRenderer : AgGridActionColumnRenderer,\r\n            },\r\n\r\n            defaultColDef: {\r\n                sortable: true,\r\n                editable: true,\r\n                filter: 'agTextColumnFilter',\r\n                floatingFilter: true,\r\n                resizable: true,\r\n                flex: 1,\r\n                width: 200,\r\n            },\r\n\r\n            modules: AllModules,\r\n            sideBar: {\r\n                toolPanels: [\r\n                  {\r\n                    id: 'columns',\r\n                    labelDefault: 'Columns',\r\n                    labelKey: 'columns',\r\n                    iconKey: 'columns',\r\n                    toolPanel: 'agColumnsToolPanel',\r\n                    toolPanelParams: {\r\n                        suppressRowGroups: true,\r\n                        suppressValues: true,\r\n                        suppressPivots: true,\r\n                        suppressPivotMode: true,\r\n                        suppressSideButtons: true,\r\n                        suppressColumnFilter: true,\r\n                        suppressColumnSelectAll: true,\r\n                        suppressColumnExpandAll: true,\r\n                      },\r\n                  },\r\n                ],\r\n                defaultToolPanel: '',\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchMasterDataItem();\r\n    }\r\n\r\n    goToCreateMasterItem() {\r\n        window.location.href = \"/portal/masterdataentry/\" + this.state.item + \"/label/\" + this.state.label;\r\n    }\r\n\r\n    goToGlobalMasterItemList() {\r\n        window.location.href = \"/portal/masterdata\";\r\n    }\r\n\r\n    fetchMasterDataItem() {\r\n\r\n        var item = this.props.match.params.item;\r\n\r\n        if(item == undefined) return;\r\n        this.setState({'item': item});\r\n\r\n\r\n        var url = this.apiService.getApiUrl(\"getmasterSpecificMasterItemList\", [this.props.match.params.item]);\r\n        var root = this;\r\n        this.apiService.invokeGet(url, this, function(response){\r\n\r\n            var data = response.data;\r\n            \r\n            var cols = [];\r\n            if(data.length > 0) {\r\n\r\n                //modify data (date format/null checking etc.)\r\n                for(var x = 0; x < data.length; x++) {\r\n\r\n                    for (var key in data[x]) {\r\n                        if(data[x][key] == null) {\r\n                            data[x][key] = \"\";\r\n                        }\r\n                        else {\r\n                            var value = data[x][key].toString();\r\n\r\n                            //check if date => match pattern yyyy-mm-dd\r\n                            if(value.match(/^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$/))\r\n                            {\r\n                                var parts = value.split(\"-\");\r\n                                value = parts[1] + \"/\" + parts[2] + \"/\" + parts[0];\r\n                            }\r\n                            data[x][key] = value;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var isFirstVisibleCol = true;\r\n                var visibleColumnCount = 0;\r\n                for (var key in data[0]) {\r\n                    var obj = {}\r\n                    obj.headerName = key;\r\n                    obj.field = key;\r\n\r\n                    if(root.itemSpecificProperties[root.state.item].hiddenCols.indexOf(obj.field) >= 0) {\r\n                        obj.hide = true;\r\n                        obj.suppressToolPanel = true;\r\n                    } else {\r\n                        //for first visible row add checkbox selection\r\n                        if(isFirstVisibleCol) {\r\n                            obj.checkboxSelection = true;\r\n                            obj.headerCheckboxSelection =  true;\r\n                            isFirstVisibleCol = false;\r\n                        }\r\n\r\n                        //after first 4 columns hide the rest\r\n                        if(visibleColumnCount > 4) {\r\n                            obj.hide = true;\r\n                            obj.suppressToolPanel = true;\r\n                        }\r\n                        visibleColumnCount++;\r\n                    }\r\n                    cols.push(obj);\r\n                }\r\n            }\r\n            \r\n            //extra column for actions like delete\r\n            var obj = {};\r\n            obj.headerName = \"Action\"\r\n            obj.field = \"action\"\r\n            obj.cellRenderer = 'gridActionColumnRenderer'\r\n            cols.push(obj);\r\n\r\n            for(var i=0; i< data.length; i++)data[i].action = \"delete\";\r\n\r\n            console.log(cols);\r\n\r\n            root.setState({\r\n                columnDefs: cols,\r\n                rowData : data\r\n            }, function(){\r\n               \r\n            });\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        \r\n    }\r\n\r\n    delete(rowdata, rowIndex) {\r\n        var idField = this.itemSpecificProperties[this.state.item].id;\r\n        var id = rowdata[idField];\r\n        var url = this.apiService.getApiUrl(\"deleteMasterItemById\", [this.state.item, id]);\r\n\r\n        var root = this;\r\n        this.apiService.invokeDelete(url, {}, this, function(response) {\r\n            if(response.status == \"success\") {\r\n                var tableData = root.state.rowData;\r\n                tableData.splice(rowIndex, 1);\r\n                root.state.gridAPI.setRowData(tableData);\r\n            } else {\r\n                root.state.alertMessage = \"Error during deleting the record. Please contact System administrator.\"\r\n            }\r\n        })\r\n    }\r\n\r\n    onGridReady(params) {\r\n        this.setState({\r\n            gridAPI: params.api,\r\n            columnAPI: params.columnApi\r\n        })\r\n    }\r\n\r\n    onFirstDataRendered(params) {\r\n        var root = this;\r\n        params.api.sizeColumnsToFit();\r\n    }\r\n\r\n    onCellClicked(obj) {\r\n        //console.log(obj);\r\n        //for action item click, it should not redirect to edit page\r\n        if(obj.column.colDef.field == \"action\") return;\r\n        var identifier = obj.data[this.itemSpecificProperties[this.state.item].id];\r\n        window.location.href = \"/portal/masterdataedit/\" + this.state.item + \"/label/\" + this.state.label + \"/id/\" + identifier;\r\n    }\r\n\r\n    onRowDataChange(params) {\r\n        \r\n    }\r\n\r\n    exportCsv() {\r\n        //console.log(this.state.columnDefs);\r\n        var exportCols = [];\r\n        for(var i=0; i< this.state.columnDefs.length; i++)\r\n        {\r\n            if(this.state.columnDefs[i].field != \"action\")exportCols.push(this.state.columnDefs[i].field);\r\n        }\r\n\r\n        var root = this;\r\n        this.state.gridAPI.exportDataAsCsv({\r\n            columnKeys: exportCols,\r\n            onlySelected: true,\r\n            allColumns: false,\r\n            fileName: root.label + \" List.csv\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"list-container\">\r\n                <Row className=\"headerRow\">\r\n                    <Col>\r\n                        <span className=\"h3-header\"> { this.label } List </span>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Button className=\"claim-dashboard-btn mateffect\" variant=\"primary\" onClick={this.goToGlobalMasterItemList.bind(this)}> \r\n                            Master Item List\r\n                        </Button>\r\n\r\n                        <Button className=\"claim-dashboard-btn mateffect margin-right\" variant=\"primary\" onClick={this.goToCreateMasterItem.bind(this)}> \r\n                            Create { this.label }\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n\r\n                    <Alert key=\"alert\" variant=\"danger\" className={(this.state.showNotification ? 'show' : 'hidden')}>\r\n                        {this.state.alertMessage}\r\n                    </Alert>\r\n\r\n                    <div id=\"grid-wrapper-master-data-item\" style={{ width: '100%', height: '100%' }}>\r\n                        <div className=\"ag-theme-alpine ag-grid-container\" style={ {height: '400px', width: '100%'} }>\r\n                            <AgGridReact\r\n                                columnDefs={this.state.columnDefs}\r\n                                rowData={this.state.rowData}\r\n                                context={this.state.context}\r\n                                modules={this.state.modules}\r\n                                sideBar={this.state.sideBar}\r\n                                rowSelection={this.state.rowSelection}\r\n                                defaultColDef={this.state.defaultColDef}\r\n                                frameworkComponents={this.state.frameworkComponents}\r\n                                onGridSizeChanged={this.onGridSizeChanged.bind(this)}\r\n                                onCellClicked={this.onCellClicked.bind(this)}\r\n                                onFirstDataRendered={this.onFirstDataRendered.bind(this)}\r\n                                onGridReady={this.onGridReady.bind(this)}\r\n                                onRowDataChanged={this.onRowDataChange.bind(this)}\r\n                                \r\n                            >\r\n                            </AgGridReact>\r\n                        </div>\r\n                        <div class=\"tbl-footer\">\r\n                            <MdFileDownload className=\"export-icon\" size='1.5em' onClick={this.exportCsv.bind(this)}/>\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onGridSizeChanged(params) {\r\n        /*var gridWidth = document.getElementById('grid-wrapper-master-data-item').offsetWidth;\r\n        var columnsToShow = [];\r\n        var columnsToHide = [];\r\n        var totalColsWidth = 0;\r\n        var allColumns = params.columnApi.getAllColumns();\r\n        for (var i = 0; i < allColumns.length; i++) {\r\n          var column = allColumns[i];\r\n          totalColsWidth += column.getMinWidth();\r\n          if (totalColsWidth > gridWidth) {\r\n            columnsToHide.push(column.colId);\r\n          } else {\r\n            columnsToShow.push(column.colId);\r\n          }\r\n        }\r\n        params.columnApi.setColumnsVisible(columnsToShow, true);\r\n        params.columnApi.setColumnsVisible(columnsToHide, false);\r\n        params.api.sizeColumnsToFit();*/\r\n    }\r\n}\r\n\r\nexport default MasterDataItem;","import React from 'react';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport ApiService from './../../service/APIService';\r\nimport { Container, FormGroup } from 'react-bootstrap';\r\n\r\nimport \"./style.css\";\r\nclass MasterDataEntry extends React.Component {\r\n\r\n    apiService = new ApiService();\r\n    apiEndPointMap = {\r\n        \"coveragetypemaster\" : \"savecoveragetypemaster\",\r\n        \"coveragetyperule\" : \"savecoveragetyperule\",\r\n        \"networkmaster\" : \"savenetworkmaster\",\r\n        \"networkrule\" : \"savenetworkrule\",\r\n        \"claimtypemaster\" : \"saveclaimtypemaster\",\r\n        \"claimtyperule\" : \"saveclaimtyperule\",\r\n        \"exclusioncodemaster\" : \"saveexclusioncodemaster\",\r\n        \"exclusioncoderule\" : \"saveexclusioncoderule\",\r\n        \"statustypemaster\" : \"savestatustypemaster\",\r\n        \"statustyperule\" : \"savestatustyperule\",\r\n        \"supervisormaster\" : \"savesupervisormaster\",\r\n        \"supervisorrule\" : \"savesupervisorrule\",\r\n        \"eligibilityoverridereasonmaster\" : \"saveeligibilityoverridereasonmaster\",\r\n        \"eligibilityoverridereasonrule\" : \"saveeligibilityoverridereasonrule\",\r\n        \"reasonforholdingclaimmaster\" : \"savereasonforholdingclaimmaster\",\r\n        \"reasonforholdingclaimrule\" : \"savereasonforholdingclaimrule\",\r\n        \"adjudicationsequencemaster\" : \"saveadjudicationsequencemaster\",\r\n        \"adjudicationsequencerule\" : \"saveadjudicationsequencerule\",\r\n        \"providermaster\" : \"saveprovidermaster\",\r\n        \"providerrule\" : \"saveproviderrule\",\r\n        \"providerstatustypemaster\" : \"saveproviderstatustypemaster\",\r\n        \"providerstatustyperule\" : \"saveproviderstatustyperule\",\r\n        \"cptmaster\" : \"savecptmaster\",\r\n        \"cptrule\" : \"savecptrule\",\r\n        \"specialprovidercptmaster\" : \"savespecialprovidercptmaster\",\r\n        \"specialprovidercptrule\" : \"savespecialprovidercptrule\",\r\n        \"specialclaimtypecptmaster\" : \"savespecialclaimtypecptmaster\",\r\n        \"specialclaimtypecptrule\" : \"savespecialclaimtypecptrule\",\r\n        \"icd10master\" : \"saveicd10master\",\r\n        \"icd10rule\" : \"saveicd10rule\",\r\n        \"proceduremaster\" : \"saveproceduremaster\",\r\n        \"procedurerule\" : \"saveprocedurerule\",\r\n        \"procedurelimitsused\" : \"saveprocedurelimitsused\",\r\n        \"limitsmaster\" : \"savelimitsmaster\",\r\n        \"limitsused\" : \"savelimitsused\"\r\n    }\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.label = this.props.match.params.label;\r\n\r\n        this.state = {\r\n\r\n            item : \"\",\r\n            mid: \"\",\r\n            rowData: [],\r\n            label: this.label,\r\n            parentFields: [],\r\n            childFields: [],\r\n            childRows: [],\r\n            formData: {},\r\n\r\n            alertMessage: \"\",\r\n            varient: \"\",\r\n            showNotification: false\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchMasterDataItemFormFields();\r\n    }\r\n\r\n    createMasterItem() {\r\n\r\n        //validation\r\n\r\n        //1. Required fields\r\n        for(var i=0; i< this.state.parentFields.length; i++) {\r\n            if(this.state.parentFields[i].hidden != 'y' && this.state.parentFields[i].required == 'y') {\r\n\r\n                if(this.state.formData[this.state.parentFields[i].identifier].trim().length == 0) {\r\n                    this.setState({\r\n                        alertMessage: this.state.parentFields[i].label + \" is a required field\",\r\n                        varient: \"danger\",\r\n                        showNotification: true\r\n                    })\r\n                    var root = this;\r\n                    setTimeout(function() {\r\n                        root.setState({\r\n                            showNotification: false\r\n                        })\r\n                    }, 4000)\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        //end validation\r\n        \r\n        var ep = this.apiEndPointMap[this.state.item.toLowerCase()];\r\n\r\n        var url;\r\n\r\n        if(this.state.mid == undefined) //which means master item entry\r\n            url = this.apiService.getApiUrl(\"createMasterItem\", [ep]);\r\n        else //which means master child item entry\r\n            url = this.apiService.getApiUrl(\"createMasterChildItem\", [ep, this.state.mid]);\r\n\r\n        console.log(this.state.formData);\r\n\r\n        var root = this;\r\n        this.apiService.invokePost(url, JSON.stringify(this.state.formData), this, function(response){\r\n            if(response.status == 'success') {\r\n                root.setState({\r\n                    alertMessage: \"Successfully added \" + root.state.label,\r\n                    varient: \"success\",\r\n                    showNotification: true\r\n                })\r\n\r\n                root.resetForm();\r\n\r\n                setTimeout(function() {\r\n                    root.setState({\r\n                        showNotification: false\r\n                    })\r\n                }, 4000)\r\n            } else if(response.status == 'error') {\r\n                var error = \"\";\r\n                if(response.message.indexOf(\"duplicate key error collection\") > 0)\r\n                    error = \"Same CPT number is already exists\";\r\n\r\n                root.setState({\r\n                    alertMessage: \"Error during saving \" + root.state.label + \" : \" + error,\r\n                    varient: \"danger\",\r\n                    showNotification: true\r\n                })\r\n\r\n                setTimeout(function() {\r\n                    root.setState({\r\n                        showNotification: false\r\n                    })\r\n                }, 4000)\r\n            }\r\n        })\r\n    }\r\n\r\n    resetForm() {\r\n        var temp = this.state.formData;\r\n        for(var i=0; i< this.state.parentFields.length; i++) {\r\n            if(this.state.parentFields[i].hidden != 'y') {\r\n                temp[this.state.parentFields[i].identifier] = \"\"\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            'formData': temp\r\n        })\r\n    }\r\n\r\n    fetchMasterDataItemFormFields() {\r\n\r\n        var item = this.props.match.params.item;\r\n        var mid = this.props.match.params.mid;\r\n\r\n        if(item == undefined) return;\r\n        this.setState({\r\n            'item' : item,\r\n            'mid' : mid\r\n        })\r\n\r\n\r\n        var url = this.apiService.getApiUrl(\"getmasterItemFormFields\", [item]);\r\n        var root = this;\r\n        this.apiService.invokeGet(url, this, function(response){\r\n\r\n            console.log(response);\r\n\r\n            var crows = [];\r\n            crows.push(response.data.child);\r\n\r\n            root.setState({parentFields : response.data.parent});\r\n            root.setState({childFields : response.data.child});\r\n            root.setState({childRows : crows});\r\n            var obj = {};\r\n\r\n            for(var i=0; i< response.data.parent.length; i++) {\r\n                obj[response.data.parent[i].identifier] = \"\"\r\n            }\r\n\r\n            //var childObj = {};\r\n            //for(var i=0; i< response.data.child.length; i++) {\r\n            //    childObj[response.data.child[i].identifier] = \"\"\r\n            //}\r\n\r\n            //obj[response.data.parentField] = childObj;\r\n            root.setState({formData : obj})\r\n        })\r\n    }\r\n\r\n    commonChangeHandler(event) {\r\n\r\n        if(event.target.dataset.type == \"number\")event.target.value = event.target.value.replace(/[^0-9.]/g, \"\"); \r\n\r\n        var fdata = this.state.formData;\r\n        fdata[event.target.dataset.name] = event.target.value\r\n        this.setState({formData : fdata})\r\n    }\r\n\r\n    goToListItems() {\r\n\r\n        if(this.state.mid == undefined) //means master data entry\r\n            window.location.href = \"/portal/masteritem/\" + this.state.item + \"/label/\" + this.state.label;\r\n        else //means child data entry \r\n        {\r\n            var masterItem = this.state.item.replace(\"Rule\", \"\") + \"Master\";\r\n            var masterItemLabel = this.state.label.replace(\"Rules\", \"\").trim();\r\n            window.location.href = \"/portal/masterdataedit/\" + masterItem + \"/label/\" + encodeURI(masterItemLabel) + \"/id/\" + this.state.mid;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        var root = this;\r\n        return (\r\n            <div className=\"list-container\">\r\n                <Row className=\"headerRow\">\r\n                    <Col>\r\n                        <span className=\"h3-header\"> Create { this.label } </span>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Button className=\"claim-dashboard-btn mateffect\" variant=\"primary\" onClick={this.goToListItems.bind(this)}> \r\n                            { this.label } List\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Container fluid>\r\n                    <Alert key=\"alert\" variant={this.state.varient} className={(this.state.showNotification ? 'show' : 'hidden')}>\r\n                        {this.state.alertMessage}\r\n                    </Alert>\r\n                    <Form.Group as={Row}>\r\n                    {\r\n                        this.state.parentFields.map(function(field, index) {\r\n                            if(field.type == \"number\")\r\n                                return (\r\n                                    <Col md={field.size} sm={field.size} className={(field.hidden == 'n' ? 'show' : 'hidden')}>\r\n                                        <Form.Group as={Row} className=\"field-group\">\r\n                                            <Form.Label className={(field.required == 'y' ? 'required' : 'notrequired')}> \r\n                                                {field.label} \r\n                                            </Form.Label>\r\n                                            <Form.Control \r\n                                                key={field.identifier}\r\n                                                type=\"text\"\r\n                                                value={root.state.formData[field.identifier] || \"\"} \r\n                                                data-name={field.identifier}\r\n                                                data-type={field.type}\r\n                                                maxLength={field.datalength}\r\n                                                onChange={root.commonChangeHandler.bind(root)}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                )\r\n                            else\r\n                                return (\r\n                                    <Col md={field.size} sm={field.size} className={(field.hidden == 'n' ? 'show' : 'hidden')}>\r\n                                        <Form.Group as={Row} className=\"field-group\">\r\n                                            <Form.Label className={(field.required == 'y' ? 'required' : 'notrequired')}> \r\n                                                {field.label} \r\n                                            </Form.Label>\r\n                                            <Form.Control \r\n                                                key={field.identifier}\r\n                                                type={field.type}\r\n                                                value={root.state.formData[field.identifier] || \"\"} \r\n                                                data-name={field.identifier}\r\n                                                data-type={field.type} \r\n                                                maxLength={field.datalength}\r\n                                                onChange={root.commonChangeHandler.bind(root)}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                )\r\n                        })\r\n                    }\r\n                    </Form.Group>\r\n\r\n                    {/*<Form.Group as={Row} controlId=\"insuredId\">\r\n                        <Form.Label>\r\n                            { this.state.label } Rules\r\n                        </Form.Label>\r\n                    </Form.Group>\r\n\r\n                    {\r\n                        this.state.childRows.map(function(row, index) {\r\n                            return(\r\n                                <Row>\r\n                                    {\r\n                                        row.map(function(field, elemIndex){\r\n                                            return(\r\n                                                <Form.Group as={Col}>\r\n                                                    <Form.Label> {field.label} </Form.Label>\r\n                                                    <Form.Control \r\n                                                        type={field.type}\r\n                                                        value={root.state.formData[field.identifier]} \r\n                                                        data-name={field.identifier}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Row>\r\n                            )\r\n                        })\r\n                    }\r\n                */}\r\n                    \r\n                    <Row>\r\n                        <Col>\r\n                            <Button className=\"claim-dashboard-btn mateffect\" variant=\"primary\" onClick={this.createMasterItem.bind(this)}> \r\n                                Submit\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onGridSizeChanged = params => {\r\n        var gridWidth = document.getElementById('grid-wrapper-master-data-item').offsetWidth;\r\n        var columnsToShow = [];\r\n        var columnsToHide = [];\r\n        var totalColsWidth = 0;\r\n        var allColumns = params.columnApi.getAllColumns();\r\n        for (var i = 0; i < allColumns.length; i++) {\r\n          var column = allColumns[i];\r\n          totalColsWidth += column.getMinWidth();\r\n          if (totalColsWidth > gridWidth) {\r\n            columnsToHide.push(column.colId);\r\n          } else {\r\n            columnsToShow.push(column.colId);\r\n          }\r\n        }\r\n        params.columnApi.setColumnsVisible(columnsToShow, true);\r\n        params.columnApi.setColumnsVisible(columnsToHide, false);\r\n        params.api.sizeColumnsToFit();\r\n    };\r\n}\r\n\r\nexport default MasterDataEntry;","import React, { Component } from 'react';\r\n\r\nimport { MdDelete } from 'react-icons/md';\r\n\r\nexport default class AgGridActionColumnRenderer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onDeleteClick = this.onDeleteClick.bind(this);\r\n    }\r\n\r\n    onDeleteClick() {\r\n\r\n        console.log(this.props.node);\r\n        this.props.context.componentParent.delete(\r\n            this.props.node.data, this.props.node.rowIndex\r\n        );\r\n    }\r\n\r\n    render() {\r\n            if(this.props.value === \"delete\"){\r\n                return (\r\n                    <>\r\n                        <MdDelete size='2em' onClick={this.onDeleteClick}/>\r\n                    </>\r\n                )\r\n            }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport { AgGridReact } from '@ag-grid-community/react';\r\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\r\n\r\nimport { BiPlusCircle } from \"react-icons/bi\";\r\nimport { MdFileDownload } from 'react-icons/md';\r\n\r\nimport ApiService from './../../service/APIService';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nimport AgGridActionColumnRenderer from './AgGridActionColumnRenderer'\r\n\r\nimport \"./style.css\";\r\n\r\nclass MasterDataEdit extends React.Component {\r\n\r\n    apiService = new ApiService();\r\n    apiEndPointMap = {\r\n        \"coveragetypemaster\" : \"updatecoveragetypemaster\",\r\n        \"coveragetyperule\" : \"updatecoveragetyperule\",\r\n        \"networkmaster\" : \"updatenetworkmaster\",\r\n        \"networkrule\" : \"updatenetworkrule\",\r\n        \"claimtypemaster\" : \"updateclaimtypemaster\",\r\n        \"claimtyperule\" : \"updateclaimtyperule\",\r\n        \"exclusioncodemaster\" : \"updateexclusioncodemaster\",\r\n        \"exclusioncoderule\" : \"updateexclusioncoderule\",\r\n        \"statustypemaster\" : \"updatestatustypemaster\",\r\n        \"statustyperule\" : \"updatestatustyperule\",\r\n        \"supervisormaster\" : \"updatesupervisormaster\",\r\n        \"supervisorrule\" : \"updatesupervisorrule\",\r\n        \"eligibilityoverridereasonmaster\" : \"updateeligibilityoverridereasonmaster\",\r\n        \"eligibilityoverridereasonrule\" : \"updateeligibilityoverridereasonrule\",\r\n        \"reasonforholdingclaimmaster\" : \"updatereasonforholdingclaimmaster\",\r\n        \"reasonforholdingclaimrule\" : \"updatereasonforholdingclaimrule\",\r\n        \"adjudicationsequencemaster\" : \"updateadjudicationsequencemaster\",\r\n        \"adjudicationsequencerule\" : \"updateadjudicationsequencerule\",\r\n        \"providermaster\" : \"updateprovidermaster\",\r\n        \"providerrule\" : \"updateproviderrule\",\r\n        \"providerstatustypemaster\" : \"updateproviderstatustypemaster\",\r\n        \"providerstatustyperule\" : \"updateproviderstatustyperule\",\r\n        \"cptmaster\" : \"updatecptmaster\",\r\n        \"cptrule\" : \"updatecptrule\",\r\n        \"specialprovidercptmaster\" : \"updatespecialprovidercptmaster\",\r\n        \"specialprovidercptrule\" : \"updatespecialprovidercptrule\",\r\n        \"specialclaimtypecptmaster\" : \"updatespecialclaimtypecptmaster\",\r\n        \"specialclaimtypecptrule\" : \"updatespecialclaimtypecptrule\",\r\n        \"icd10master\" : \"updateicd10master\",\r\n        \"icd10rule\" : \"updateicd10rule\",\r\n        \"proceduremaster\" : \"updateproceduremaster\",\r\n        \"procedurerule\" : \"updateprocedurerule\",\r\n        \"procedurelimitsused\" : \"updateprocedurelimitsused\",\r\n        \"limitsmaster\" : \"updatelimitsmaster\",\r\n        \"limitsused\" : \"updatelimitsused\"\r\n    }\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.label = this.props.match.params.label;\r\n\r\n        this.state = {\r\n            item : \"\",\r\n            rowData: [],\r\n            label: this.label,\r\n            id: \"\",\r\n            parentFields: [],\r\n            childField: \"\",\r\n            childRows: [],\r\n            childCols: [],\r\n            childClass: \"\",\r\n            formData: {},\r\n            childLabel: \"\",\r\n\r\n            agGridParams: \"\",\r\n\r\n            gridApi: \"\",\r\n            columnAPI: \"\",\r\n\r\n            alertMessage: \"\",\r\n            varient: \"\",\r\n            showNotification: false,\r\n\r\n            createChildLink: \"\",\r\n\r\n            context: { componentParent: this },\r\n            frameworkComponents: {\r\n                gridActionColumnRenderer : AgGridActionColumnRenderer,\r\n            },\r\n\r\n            defaultColDef: {\r\n                sortable: true,\r\n                editable: true,\r\n                filter: 'agTextColumnFilter',\r\n                floatingFilter: true,\r\n                resizable: true,\r\n            },\r\n\r\n            modules: AllModules,\r\n            sideBar: {\r\n                toolPanels: [\r\n                  {\r\n                    id: 'columns',\r\n                    labelDefault: 'Columns',\r\n                    labelKey: 'columns',\r\n                    iconKey: 'columns',\r\n                    toolPanel: 'agColumnsToolPanel',\r\n                    toolPanelParams: {\r\n                        suppressRowGroups: true,\r\n                        suppressValues: true,\r\n                        suppressPivots: true,\r\n                        suppressPivotMode: true,\r\n                        suppressSideButtons: true,\r\n                        suppressColumnFilter: true,\r\n                        suppressColumnSelectAll: true,\r\n                        suppressColumnExpandAll: true,\r\n                      },\r\n                  },\r\n                ],\r\n                defaultToolPanel: '',\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchMasterDataItemFormFields();\r\n    }\r\n\r\n    export() {\r\n\r\n        var exportCols = [];\r\n        for(var i=0; i< this.state.childCols.length; i++)\r\n        {\r\n            if(this.state.childCols[i].field != \"action\" && !this.state.childCols[i].hide)\r\n                exportCols.push(this.state.childCols[i].field);\r\n        }\r\n\r\n        var root = this;\r\n        this.state.gridAPI.exportDataAsCsv({\r\n            columnKeys: exportCols,\r\n            //onlySelected: true,\r\n            allColumns: false,\r\n            fileName: root.state.childLabel + \" List.csv\"\r\n        });\r\n\r\n        //this.state.gridAPI.exportDataAsCsv({});\r\n    }\r\n\r\n    editMasterItem() {\r\n\r\n        //validation\r\n\r\n        //1. Required fields\r\n        for(var i=0; i< this.state.parentFields.length; i++) {\r\n            if(this.state.parentFields[i].hidden != 'y' && this.state.parentFields[i].required == 'y') {\r\n\r\n                if(this.state.formData[this.state.parentFields[i].identifier].toString().trim().length == 0) {\r\n                    this.setState({\r\n                        alertMessage: this.state.parentFields[i].label + \" is a required field\",\r\n                        varient: \"danger\",\r\n                        showNotification: true\r\n                    })\r\n                    var root = this;\r\n                    setTimeout(function() {\r\n                        root.setState({\r\n                            showNotification: false\r\n                        })\r\n                    }, 4000)\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        //end validation\r\n        \r\n        var ep = this.apiEndPointMap[this.state.item.toLowerCase()];\r\n\r\n        var url;\r\n        if(this.state.cid == undefined) //means master item\r\n            url = this.apiService.getApiUrl(\"editMasterItem\", [ep]);\r\n        else \r\n            url = this.apiService.getApiUrl(\"editMasterChildItem\", [ep, this.state.id]);\r\n\r\n        console.log(this.state.formData);\r\n\r\n        var root = this;\r\n        this.apiService.invokePut(url, JSON.stringify(this.state.formData), this, function(response){\r\n            if(response.status == 'success') {\r\n                root.setState({\r\n                    alertMessage: \"Successfully updated \" + root.state.label,\r\n                    varient: \"success\",\r\n                    showNotification: true\r\n                })\r\n\r\n                setTimeout(function() {\r\n                    root.setState({\r\n                        showNotification: false\r\n                    })\r\n                }, 4000)\r\n            } else if(response.status == 'error') {\r\n                var error = \"\";\r\n                if(response.message.indexOf(\"duplicate key error collection\") > 0)\r\n                    error = \"Same CPT number is already exists\";\r\n\r\n                root.setState({\r\n                    alertMessage: \"Error during saving \" + root.state.label + \" : \" + error,\r\n                    varient: \"danger\",\r\n                    showNotification: true\r\n                })\r\n\r\n                setTimeout(function() {\r\n                    root.setState({\r\n                        showNotification: false\r\n                    })\r\n                }, 4000)\r\n            }\r\n        })\r\n    }\r\n\r\n    fetchMasterDataItemFormFields() {\r\n\r\n        var item = this.props.match.params.item;\r\n        var id = this.props.match.params.id;\r\n\r\n        //only for child edit\r\n        //child edit URL pattern\r\n        ///portal/masterdataedit/:item?/masteritem/:masteritem?/label/:label?/id/:id?/cid/:cid?\r\n        var cid = this.props.match.params.cid;     //child id\r\n        var masterItem = this.props.match.params.masteritem;\r\n\r\n        if(item == undefined || id == undefined) return;\r\n        this.setState({\r\n            'item' : item,\r\n            'id' : id,\r\n            'cid' : cid,\r\n            'masterItem' : masterItem\r\n        })\r\n\r\n        if(cid != undefined) //merans child edit\r\n        {\r\n            //if child item edit, I could not able to brind the label via URl due to some react routing issue\r\n            this.label = this.constructLabelFromItem(item);\r\n            this.setState({\r\n                'label' : this.label\r\n            })\r\n        }\r\n\r\n        var url = this.apiService.getApiUrl(\"getmasterItemFormFields\", [item]);\r\n        var root = this;\r\n        this.apiService.invokeGet(url, this, function(response){\r\n\r\n            console.log(response);\r\n\r\n            var constructedChildLabel = \"\";\r\n            var childField = response.data.childField;\r\n\r\n            //for child items edit child field will be null, so check it first\r\n            if(childField != null) {\r\n                constructedChildLabel = root.constructLabelFromItem(childField);\r\n            }\r\n\r\n            root.setState({\r\n                parentFields : response.data.parent,\r\n                childField : response.data.childField,\r\n                childClass : response.data.childClass,\r\n                childLabel: constructedChildLabel,\r\n                createChildLink: \"/portal/masterdataentry/\" + response.data.childClass + \"/label/\" + constructedChildLabel + \"/mid/\" + root.state.id\r\n            })\r\n            var obj = {};\r\n            \r\n            for(var i=0; i< response.data.parent.length; i++) {\r\n                obj[response.data.parent[i].identifier] = \"\"\r\n            }\r\n\r\n            //add child field\r\n            obj[response.data.childField] = \"\";\r\n\r\n            root.setState({formData : obj})\r\n\r\n            root.getDataById();\r\n        })\r\n    }\r\n\r\n    constructLabelFromItem(item) {\r\n        var label = \"\";\r\n        for(var i=0; i< item.length; i++) {\r\n            if(i == 0)label += item[i].toUpperCase();\r\n            else if(this.isCaps(item[i]))label += ' ' + item[i];\r\n            else label += item[i]\r\n        }\r\n        return label;\r\n    }\r\n\r\n    isCaps(ch) {\r\n        if (!isNaN(ch * 1)){\r\n           return 'ch is numeric';\r\n        }\r\n         else {\r\n           if (ch == ch.toUpperCase()) {\r\n              return true;\r\n           }\r\n           if (ch == ch.toLowerCase()){\r\n              return false;\r\n           }\r\n        }\r\n    }\r\n\r\n    getDataById() {\r\n\r\n        var root = this;\r\n        var url = \"\";\r\n        \r\n        if(this.state.cid == undefined) //means parent item\r\n            url = this.apiService.getApiUrl(\"getMasterItemById\", [this.state.item, this.state.id]);\r\n        else \r\n            url = this.apiService.getApiUrl(\"getMasterChildItemById\", [this.state.item, this.state.id, this.state.cid]); //for child item this.state.item indicates child\r\n\r\n        this.apiService.invokeGet(url, this, function(response){\r\n\r\n            var data = response.data;\r\n            var obj = {};\r\n            var childRows;\r\n            for (var key in root.state.formData) {\r\n\r\n                obj[key] = data[key];\r\n            }\r\n\r\n            root.setState({formData: obj})\r\n\r\n            if(root.state.cid == undefined) //means parent item\r\n                root.getChildTableFields(data[root.state.childField]);\r\n        })\r\n    }\r\n\r\n    getChildTableFields(childRows) {\r\n        var root = this;\r\n        var url = this.apiService.getApiUrl(\"getTableFields\", [this.state.childClass]);\r\n\r\n        this.apiService.invokeGet(url, this, function(response){\r\n\r\n            var data = response.data;\r\n            var tableFields = data.tableFields;\r\n            var colDefs = [];\r\n            var rowDefs = [];\r\n            console.log(childRows);\r\n            for(var i=0; i< tableFields.length; i++) {\r\n                //after first 4 columns hide the rest\r\n                if(i < 4){\r\n                    if(tableFields[i].hidden == 'y')\r\n                        colDefs.push({ headerName: tableFields[i].label, field: tableFields[i].identifier, hide: true })\r\n                    else\r\n                        colDefs.push({ headerName: tableFields[i].label, field: tableFields[i].identifier})\r\n                }\r\n                else colDefs.push(\r\n                    { \r\n                        headerName: tableFields[i].label, \r\n                        field: tableFields[i].identifier,\r\n                        hide: true,\r\n                        suppressToolPanel: true\r\n                    }\r\n                )\r\n            }\r\n\r\n            //extra column for actions like delete\r\n            var obj = {};\r\n            obj.headerName = \"Action\"\r\n            obj.field = \"action\"\r\n            obj.cellRenderer = 'gridActionColumnRenderer'\r\n            colDefs.push(obj);\r\n\r\n            for(var i=0; i< childRows.length; i++) {\r\n                var row = childRows[i];\r\n                \r\n                //BAD CODING!!! Need to check at Server side.. for quick delivery\r\n                if(row.isDeleted)continue;\r\n                var rowObj = {};\r\n\r\n                for(var j=0; j< tableFields.length; j++) {\r\n\r\n                    if(row[tableFields[j].identifier] == null) {\r\n                        rowObj[tableFields[j].identifier] = \"\";\r\n                    }\r\n                    else {\r\n                        var value = row[tableFields[j].identifier].toString();\r\n\r\n                        //check if date => match pattern yyyy-mm-dd\r\n                        if(value.match(/^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$/))\r\n                        {\r\n                            var parts = value.split(\"-\");\r\n                            value = parts[1] + \"/\" + parts[2] + \"/\" + parts[0];\r\n                        }\r\n                        rowObj[tableFields[j].identifier] = value;\r\n                    }\r\n                }\r\n                rowObj.action = \"delete\";\r\n                if(!rowObj.isDeteled)rowDefs.push(rowObj);\r\n            }\r\n            \r\n            //console.log(colDefs);\r\n            //console.log(rowDefs);\r\n            root.setState({\r\n                childCols: colDefs,\r\n                childRows: rowDefs\r\n            }, function() {})\r\n        })\r\n    }\r\n\r\n    onFirstDataRendered(params) {\r\n        params.api.sizeColumnsToFit();\r\n    }\r\n\r\n    commonChangeHandler(event) {\r\n        var fdata = this.state.formData;\r\n        fdata[event.target.dataset.name] = event.target.value\r\n        this.setState({formData : fdata})\r\n    }\r\n\r\n    goToListItems() {\r\n        if(this.state.cid == undefined) //means parent item\r\n            window.location.href = \"/portal/masteritem/\" + this.state.item + \"/label/\" + this.state.label;\r\n        else window.history.back();\r\n    }\r\n\r\n    onGridReady(params) {\r\n        this.setState({\r\n            gridAPI: params.api,\r\n            columnAPI: params.columnApi\r\n        })\r\n    }\r\n\r\n    onGridSizeChanged(params) {\r\n        params.api.sizeColumnsToFit();\r\n    }\r\n\r\n    delete(rowdata, rowIndex) {\r\n\r\n        var id = rowdata.id;\r\n        console.log([this.state.item, this.state.id, this.state.childField, id]);\r\n        var url = this.apiService.getApiUrl(\r\n            \"deleteChildItemById\", \r\n            [this.state.item, this.state.id, this.state.childField, id]\r\n        );\r\n\r\n        var root = this;\r\n        this.apiService.invokeDelete(url, {}, this, function(response) {\r\n            if(response.status == \"success\") {\r\n                var tableData = root.state.childRows;\r\n                tableData.splice(rowIndex, 1);\r\n                root.state.gridAPI.setRowData(tableData);\r\n            } else {\r\n                root.state.alertMessage = \"Error during deleting the record. Please contact System administrator.\"\r\n            }\r\n        })\r\n    }\r\n\r\n    onCellClicked(params) {\r\n        //console.log(params.data.id);\r\n        if(params.column.colDef.field == \"action\") return;\r\n\r\n        var item = this.state.item;\r\n        var childLabel = this.state.childLabel;\r\n        ///portal/masterdataedit/:item?/label/:label?/id/:id?\r\n        //window.location.href = \"/portal/masterdataedit/\" + this.state.childClass + \"/masteritem/\" + item + \"/label/\" + childLabel + \"/id/\" + this.state.id + \"/cid/\" + params.data.id;\r\n        window.location.href = \"/portal/masterdataedit/\" + this.state.childClass + \"/id/\" + this.state.id + \"/cid/\" + params.data.id;\r\n    }\r\n\r\n    render() {\r\n\r\n        var root = this;\r\n        return (\r\n            <div className=\"list-container\">\r\n                <Row className=\"headerRow\">\r\n                    <Col>\r\n                        <span className=\"h3-header\"> Edit { this.label } </span>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Button className=\"claim-dashboard-btn mateffect\" variant=\"primary\" onClick={this.goToListItems.bind(this)}> \r\n                            { this.label } List\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Container fluid>\r\n                    <Alert key=\"alert\" variant={this.state.varient} className={(this.state.showNotification ? 'show' : 'hidden')}>\r\n                        {this.state.alertMessage}\r\n                    </Alert>\r\n                    <Form.Group as={Row}>\r\n                    {\r\n                        this.state.parentFields.map(function(field, index) {\r\n                            if(field.type == \"number\")\r\n                                return (\r\n                                    <Col md={field.size} sm={field.size} className={(field.hidden == 'n' ? 'show' : 'hidden')}>\r\n                                        <Form.Group as={Row} className=\"field-group\">\r\n                                            <Form.Label className={(field.required == 'y' ? 'required' : 'notrequired')}> \r\n                                                {field.label} \r\n                                            </Form.Label>\r\n                                            <Form.Control \r\n                                                key={field.identifier}\r\n                                                type=\"text\"\r\n                                                value={root.state.formData[field.identifier] || \"\"} \r\n                                                data-name={field.identifier}\r\n                                                data-type={field.type}\r\n                                                maxLength={field.datalength}\r\n                                                onChange={root.commonChangeHandler.bind(root)}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                )\r\n                            else\r\n                                return (\r\n                                    <Col md={field.size} sm={field.size} className={(field.hidden == 'n' ? 'show' : 'hidden')}>\r\n                                        <Form.Group as={Row} className=\"field-group\">\r\n                                            <Form.Label className={(field.required == 'y' ? 'required' : 'notrequired')}> \r\n                                                {field.label} \r\n                                            </Form.Label>\r\n                                            <Form.Control \r\n                                                key={field.identifier}\r\n                                                type={field.type}\r\n                                                value={root.state.formData[field.identifier] || \"\"} \r\n                                                data-name={field.identifier}\r\n                                                data-type={field.type} \r\n                                                maxLength={field.datalength}\r\n                                                onChange={root.commonChangeHandler.bind(root)}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                )\r\n                        })\r\n                    }\r\n                    </Form.Group>\r\n                    \r\n                    <Row>\r\n                        <Col>\r\n                            <Button className=\"claim-dashboard-btn mateffect\" variant=\"primary\" onClick={this.editMasterItem.bind(this)}> \r\n                                Update\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <hr />\r\n\r\n                    <Row className={((this.state.cid == undefined) ? 'show' : 'hidden')}>\r\n                        <Col md={10}>\r\n                            <span className=\"h3-header\"> {this.state.childLabel} </span>\r\n                        </Col>\r\n\r\n                        <Col md={2}>\r\n                            <a className=\"add-child-link\" href={this.state.createChildLink}> \r\n                                <BiPlusCircle />&nbsp;\r\n                                Add new {this.state.childLabel} \r\n                            </a>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row className={((this.state.cid == undefined) ? 'show' : 'hidden')}>\r\n                        <div id=\"grid-wrapper-child-item-list\" style={{ width: '100%', height: '100%' }}>\r\n                            <div className=\"ag-theme-alpine ag-grid-container\" style={ {height: '300px', width: '100%'} }>\r\n                                <AgGridReact\r\n                                    columnDefs={this.state.childCols}\r\n                                    rowData={this.state.childRows}\r\n                                    context={this.state.context}\r\n                                    modules={this.state.modules}\r\n                                    sideBar={this.state.sideBar}\r\n                                    defaultColDef={this.state.defaultColDef}\r\n                                    frameworkComponents={this.state.frameworkComponents}\r\n                                    onGridSizeChanged={this.onGridSizeChanged.bind(this)}\r\n                                    onCellClicked={this.onCellClicked.bind(this)}\r\n                                    onFirstDataRendered={this.onFirstDataRendered.bind(this)}\r\n                                    onGridReady={this.onGridReady.bind(this)}\r\n                                    \r\n                                >\r\n                                </AgGridReact>\r\n                            </div>\r\n                            <div class=\"tbl-footer\">\r\n                                <MdFileDownload className=\"export-icon\" size='1.5em' onClick={this.export.bind(this)}/>\r\n                            </div>\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n\r\n                <br />\r\n                <br />\r\n                <br />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onGridSizeChanged = params => {\r\n\r\n        /*this.setState({agGridParams: params});\r\n\r\n        var gridWidth = document.getElementById('grid-wrapper-child-item-list').offsetWidth;\r\n        var columnsToShow = [];\r\n        var columnsToHide = [];\r\n        var totalColsWidth = 0;\r\n        var allColumns = params.columnApi.getAllColumns();\r\n        for (var i = 0; i < allColumns.length; i++) {\r\n          var column = allColumns[i];\r\n          totalColsWidth += column.getMinWidth();\r\n          if (totalColsWidth > gridWidth) {\r\n            columnsToHide.push(column.colId);\r\n          } else {\r\n            columnsToShow.push(column.colId);\r\n          }\r\n        }\r\n        params.columnApi.setColumnsVisible(columnsToShow, true);\r\n        params.columnApi.setColumnsVisible(columnsToHide, false);\r\n        params.api.sizeColumnsToFit();*/\r\n    };\r\n}\r\n\r\nexport default MasterDataEdit;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; \r\n\r\nimport KMRClaims from './KMRClaims';\r\nimport CreateClaim from './create-claim/CreateClaim';\r\nimport MasterDataList from './master-data-list/MasterDataList';\r\n\r\nimport \"../styles/KMRContentArea.css\";\r\nimport MasterDataItem from './master-data-item/MasterDataItem';\r\nimport MasterDataEntry from './master-data-entry/MasterDataEntry';\r\nimport MasterDataEdit from './master-data-edit/MasterDataEdit';\r\n\r\n\r\nclass KMRContentArea extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"fixed-content-area container-fluid\">\r\n                <Router>\r\n                    <Route exact path='/portal/dashboard' component={KMRClaims}></Route> \r\n                    <Route exact path='/portal/create/:claimid?' component={CreateClaim}></Route> \r\n                    <Route exact path='/portal/masterdata' component={MasterDataList}></Route> \r\n                    <Route exact path='/portal/masteritem/:item?/label/:label?' component={MasterDataItem}></Route> \r\n                    {/* For Master Data Entry */}\r\n                    <Route exact path='/portal/masterdataentry/:item?/label/:label?' component={MasterDataEntry}></Route> \r\n                    {/* For Child Data Entry*/}\r\n                    <Route exact path='/portal/masterdataentry/:item?/label/:label?/mid/:mid?' component={MasterDataEntry}></Route> \r\n\r\n                    {/* For Master Item Edit */}\r\n                    <Route exact path='/portal/masterdataedit/:item?/label/:label?/id/:id?/:cid?' component={MasterDataEdit}></Route>\r\n                    \r\n                    {/* For Child Item Edit : cid => child id*/}\r\n\t\t\t\t\t<Route exact path='/portal/masterdataedit/:item?/id/:id?/cid/:cid?' component={MasterDataEdit}></Route> \r\n                    \r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default KMRContentArea;","import React from 'react';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport ApiService from './../../service/APIService';\r\nimport { Container, FormGroup } from 'react-bootstrap';\r\n\r\nimport \"./style.css\";\r\n\r\nclass Login extends React.Component {\r\n\r\n    apiService = new ApiService();\r\n   \r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\"\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    changeUsername(event) {\r\n        this.setState({\"username\" : event.target.value})\r\n    }\r\n\r\n    changePassword(event) {\r\n        this.setState({\"password\" : event.target.value})\r\n    }\r\n\r\n    login() {\r\n        if(this.state.username == \"karen\" && this.state.password == \"kmradminpass1234\") {\r\n            sessionStorage.setItem(\"loggedin\", 1);\r\n            window.location.reload();\r\n        } else{\r\n            alert(\"Wrong Credentials\");\r\n        }\r\n    }\r\n                \r\n    render() {\r\n\r\n        var root = this;\r\n        return (\r\n            <Container className=\"login-container\" fluid>\r\n                <div className=\"overlay\"></div>\r\n                <div className=\"inclined-parent\">\r\n                    <div className=\"local-logo-area\">\r\n                        {/*<img src=\"../../assets/img/local-logo.png\" />*/}\r\n                    </div>\r\n                    <div className=\"local-tag-line-section\">\r\n                        <p>Live better, work union </p>\r\n                        <p>\r\n                        Phone:  780-426-3375 / 403-250-1060\r\n                        <br />\r\n                        Email: info@local8.ca\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"login-card\">\r\n\r\n                    <div className=\"login-card-overlay\"></div>\r\n                    <div className=\"kmr-logo-section\">\r\n                        <div class=\"kmr-logo-image-container\">\r\n                            {/*<img src=\"../assets/img/kmr-logo.png\"/>*/}\r\n                        </div>\r\n                        <hr />\r\n                        <div id=\"login-inputs\" >\r\n                            <div className=\"label-container\">\r\n                                <label>Username: </label>\r\n                            </div>\r\n                            <input id=\"username\" className=\"kmr-input\" type=\"text\" placeholder=\"Enter Username\" value={this.state.username} onChange={this.changeUsername.bind(this)}/>\r\n                            <br /> <br />\r\n                            <div className=\"label-container\">\r\n                                <label>Password: </label>\r\n                            </div>\r\n                            <input id=\"password\" className=\"kmr-input\" type=\"password\" placeholder=\"Enter Password\" value={this.state.password} onChange={this.changePassword.bind(this)}/>\r\n                            <br /> <br />\r\n\r\n                            <div className=\"rememberme-section\">\r\n                                &nbsp; &nbsp;\r\n                                <input id=\"rememberme\" type=\"checkbox\" /> &nbsp;\r\n                                <label> Remember Me </label>\r\n                                &nbsp; &nbsp;\r\n                                <a href=\"#\"> Forgot Password </a>\r\n                            </div>\r\n                            <br /> <br />\r\n                            <button className=\"kmr-button\" onClick={this.login.bind(this)}> Login </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'; \r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport KMRHeader from '../header/KMRHeader.jsx'\r\nimport KMRMenu from '../menu/KMRMenu.jsx';\r\nimport KMRContentArea from '../KMRContentArea.jsx';\r\n\r\nimport KMRClaims from '../KMRClaims';\r\nimport Login from '../login/Login.jsx';\r\n\r\nimport \"./style.css\";\r\n\r\nclass KMRParentComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loggedIn : \"false\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        //check login\r\n        var checkLogin = sessionStorage.getItem(\"loggedin\");\r\n        if(checkLogin == undefined || checkLogin == 0)this.setState({'loggedIn' : false})\r\n        else this.setState({'loggedIn' : true})\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={(!this.state.loggedIn ? 'show' : 'hidden')}>\r\n                    <Login></Login>\r\n                </div>\r\n                <div className={(this.state.loggedIn ? 'show' : 'hidden')}>\r\n                    <KMRHeader></KMRHeader>\r\n                    <KMRMenu></KMRMenu>\r\n                    <Router>\r\n                        <Route exact path='/portal/:path1?/:path2?/:path3?/:path4?/:path5?/:path6?' component={KMRContentArea}></Route> \r\n                    </Router>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default KMRParentComponent;","import React from 'react';\n\nimport './App.css';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nimport KMRParentComponent from \"./components/parent/KMRParentComponent\";\n\nfunction App() {\n  return (\n    <KMRParentComponent></KMRParentComponent>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter> \n      <App /> \n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}